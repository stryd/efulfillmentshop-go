{
  "basePath": "/v1",
  "components": {
    "schemas": {
      "Address-read": {
        "description": "Address entity",
        "properties": {
          "city": {
            "description": "The address city",
            "type": "string"
          },
          "company": {
            "description": "The address company",
            "type": "string"
          },
          "countryCode": {
            "description": "The address country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The address email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The address house number",
            "type": "string"
          },
          "id": {
            "description": "The address ID",
            "type": "integer"
          },
          "name": {
            "description": "The address name",
            "type": "string"
          },
          "phone": {
            "description": "The address phone",
            "type": "string"
          },
          "street": {
            "description": "The address street",
            "type": "string"
          },
          "street2": {
            "description": "The address street 2",
            "type": "string"
          },
          "zip": {
            "description": "The address zip",
            "type": "string"
          }
        },
        "required": [
          "name",
          "street",
          "zip",
          "city",
          "countryCode"
        ],
        "type": "object"
      },
      "Address-write": {
        "description": "Address entity",
        "properties": {
          "city": {
            "description": "The address city",
            "type": "string"
          },
          "company": {
            "description": "The address company",
            "type": "string"
          },
          "countryCode": {
            "description": "The address country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The address email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The address house number",
            "type": "string"
          },
          "name": {
            "description": "The address name",
            "type": "string"
          },
          "phone": {
            "description": "The address phone",
            "type": "string"
          },
          "street": {
            "description": "The address street",
            "type": "string"
          },
          "street2": {
            "description": "The address street 2",
            "type": "string"
          },
          "zip": {
            "description": "The address zip",
            "type": "string"
          }
        },
        "required": [
          "name",
          "street",
          "zip",
          "city",
          "countryCode"
        ],
        "type": "object"
      },
      "Address:jsonld-read": {
        "description": "Address entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "city": {
            "description": "The address city",
            "type": "string"
          },
          "company": {
            "description": "The address company",
            "type": "string"
          },
          "countryCode": {
            "description": "The address country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The address email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The address house number",
            "type": "string"
          },
          "id": {
            "description": "The address ID",
            "type": "integer"
          },
          "name": {
            "description": "The address name",
            "type": "string"
          },
          "phone": {
            "description": "The address phone",
            "type": "string"
          },
          "street": {
            "description": "The address street",
            "type": "string"
          },
          "street2": {
            "description": "The address street 2",
            "type": "string"
          },
          "zip": {
            "description": "The address zip",
            "type": "string"
          }
        },
        "required": [
          "name",
          "street",
          "zip",
          "city",
          "countryCode"
        ],
        "type": "object"
      },
      "Address:jsonld-write": {
        "description": "Address entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "city": {
            "description": "The address city",
            "type": "string"
          },
          "company": {
            "description": "The address company",
            "type": "string"
          },
          "countryCode": {
            "description": "The address country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The address email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The address house number",
            "type": "string"
          },
          "name": {
            "description": "The address name",
            "type": "string"
          },
          "phone": {
            "description": "The address phone",
            "type": "string"
          },
          "street": {
            "description": "The address street",
            "type": "string"
          },
          "street2": {
            "description": "The address street 2",
            "type": "string"
          },
          "zip": {
            "description": "The address zip",
            "type": "string"
          }
        },
        "required": [
          "name",
          "street",
          "zip",
          "city",
          "countryCode"
        ],
        "type": "object"
      },
      "Carrier-read": {
        "description": "Carrier entity",
        "properties": {
          "id": {
            "description": "The carrier ID",
            "type": "integer"
          },
          "name": {
            "description": "The carrier name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Carrier:jsonld-read": {
        "description": "Carrier entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The carrier ID",
            "type": "integer"
          },
          "name": {
            "description": "The carrier name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Product-read_collection": {
        "description": "Product entity",
        "properties": {
          "barcode": {
            "description": "The product barcode",
            "type": "string"
          },
          "channelReference": {
            "description": "The product channel reference (DEPRECATED)",
            "type": "string"
          },
          "costPrice": {
            "description": "The product cost price (Excluding taxes)",
            "type": "number"
          },
          "dimensionX": {
            "description": "The product dimension X in cm",
            "type": "number"
          },
          "dimensionY": {
            "description": "The product dimension Y in cm",
            "type": "number"
          },
          "dimensionZ": {
            "description": "The product dimension Z in cm",
            "type": "number"
          },
          "hsCode": {
            "description": "The product HS code",
            "type": "string"
          },
          "id": {
            "description": "The product ID",
            "type": "integer"
          },
          "name": {
            "description": "The product name",
            "type": "string"
          },
          "quantityAvailable": {
            "description": "The physical available product quantity",
            "type": "integer"
          },
          "quantityIncoming": {
            "description": "The incoming product quantity",
            "type": "integer"
          },
          "quantityOnHand": {
            "description": "The product quantity on hand",
            "type": "integer"
          },
          "quantityOutgoing": {
            "description": "The outgoing product quantity",
            "type": "integer"
          },
          "quantitySold": {
            "description": "The sold product quantity",
            "type": "integer"
          },
          "reference": {
            "description": "Your product reference (This could be your product ID)",
            "type": "string"
          },
          "sellingPrice": {
            "description": "The product selling price (Excluding taxes)",
            "type": "number"
          },
          "sku": {
            "description": "The product warehouse SKU",
            "type": "string"
          },
          "volume": {
            "description": "The product volume in L (Calculated using dimensions)",
            "type": "number"
          },
          "weight": {
            "description": "The product weight in kg",
            "type": "number"
          }
        },
        "required": [
          "name",
          "barcode"
        ],
        "type": "object"
      },
      "Product-read_item": {
        "description": "Product entity",
        "properties": {
          "barcode": {
            "description": "The product barcode",
            "type": "string"
          },
          "channelReference": {
            "description": "The product channel reference (DEPRECATED)",
            "type": "string"
          },
          "costPrice": {
            "description": "The product cost price (Excluding taxes)",
            "type": "number"
          },
          "dimensionX": {
            "description": "The product dimension X in cm",
            "type": "number"
          },
          "dimensionY": {
            "description": "The product dimension Y in cm",
            "type": "number"
          },
          "dimensionZ": {
            "description": "The product dimension Z in cm",
            "type": "number"
          },
          "hsCode": {
            "description": "The product HS code",
            "type": "string"
          },
          "id": {
            "description": "The product ID",
            "type": "integer"
          },
          "image": {
            "description": "The product image (As a base64 encoded string)",
            "type": "string"
          },
          "name": {
            "description": "The product name",
            "type": "string"
          },
          "quantityAvailable": {
            "description": "The physical available product quantity",
            "type": "integer"
          },
          "quantityIncoming": {
            "description": "The incoming product quantity",
            "type": "integer"
          },
          "quantityOnHand": {
            "description": "The product quantity on hand",
            "type": "integer"
          },
          "quantityOutgoing": {
            "description": "The outgoing product quantity",
            "type": "integer"
          },
          "quantitySold": {
            "description": "The sold product quantity",
            "type": "integer"
          },
          "reference": {
            "description": "Your product reference (This could be your product ID)",
            "type": "string"
          },
          "sellingPrice": {
            "description": "The product selling price (Excluding taxes)",
            "type": "number"
          },
          "sku": {
            "description": "The product warehouse SKU",
            "type": "string"
          },
          "volume": {
            "description": "The product volume in L (Calculated using dimensions)",
            "type": "number"
          },
          "weight": {
            "description": "The product weight in kg",
            "type": "number"
          }
        },
        "required": [
          "name",
          "barcode"
        ],
        "type": "object"
      },
      "Product-write": {
        "description": "Product entity",
        "properties": {
          "barcode": {
            "description": "The product barcode",
            "type": "string"
          },
          "channelReference": {
            "description": "The product channel reference (DEPRECATED)",
            "type": "string"
          },
          "costPrice": {
            "description": "The product cost price (Excluding taxes)",
            "type": "number"
          },
          "dimensionX": {
            "description": "The product dimension X in cm",
            "type": "number"
          },
          "dimensionY": {
            "description": "The product dimension Y in cm",
            "type": "number"
          },
          "dimensionZ": {
            "description": "The product dimension Z in cm",
            "type": "number"
          },
          "hsCode": {
            "description": "The product HS code",
            "type": "string"
          },
          "image": {
            "description": "The product image (As a base64 encoded string)",
            "type": "string"
          },
          "name": {
            "description": "The product name",
            "type": "string"
          },
          "reference": {
            "description": "Your product reference (This could be your product ID)",
            "type": "string"
          },
          "sellingPrice": {
            "description": "The product selling price (Excluding taxes)",
            "type": "number"
          },
          "weight": {
            "description": "The product weight in kg",
            "type": "number"
          }
        },
        "required": [
          "name",
          "barcode"
        ],
        "type": "object"
      },
      "Product:jsonld-read_collection": {
        "description": "Product entity",
        "properties": {
          "barcode": {
            "description": "The product barcode",
            "type": "string"
          },
          "channelReference": {
            "description": "The product channel reference (DEPRECATED)",
            "type": "string"
          },
          "costPrice": {
            "description": "The product cost price (Excluding taxes)",
            "type": "number"
          },
          "dimensionX": {
            "description": "The product dimension X in cm",
            "type": "number"
          },
          "dimensionY": {
            "description": "The product dimension Y in cm",
            "type": "number"
          },
          "dimensionZ": {
            "description": "The product dimension Z in cm",
            "type": "number"
          },
          "hsCode": {
            "description": "The product HS code",
            "type": "string"
          },
          "id": {
            "description": "The product ID",
            "type": "integer"
          },
          "name": {
            "description": "The product name",
            "type": "string"
          },
          "quantityAvailable": {
            "description": "The physical available product quantity",
            "type": "integer"
          },
          "quantityIncoming": {
            "description": "The incoming product quantity",
            "type": "integer"
          },
          "quantityOnHand": {
            "description": "The product quantity on hand",
            "type": "integer"
          },
          "quantityOutgoing": {
            "description": "The outgoing product quantity",
            "type": "integer"
          },
          "quantitySold": {
            "description": "The sold product quantity",
            "type": "integer"
          },
          "reference": {
            "description": "Your product reference (This could be your product ID)",
            "type": "string"
          },
          "sellingPrice": {
            "description": "The product selling price (Excluding taxes)",
            "type": "number"
          },
          "sku": {
            "description": "The product warehouse SKU",
            "type": "string"
          },
          "volume": {
            "description": "The product volume in L (Calculated using dimensions)",
            "type": "number"
          },
          "weight": {
            "description": "The product weight in kg",
            "type": "number"
          }
        },
        "required": [
          "name",
          "barcode"
        ],
        "type": "object"
      },
      "Product:jsonld-read_item": {
        "description": "Product entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "barcode": {
            "description": "The product barcode",
            "type": "string"
          },
          "channelReference": {
            "description": "The product channel reference (DEPRECATED)",
            "type": "string"
          },
          "costPrice": {
            "description": "The product cost price (Excluding taxes)",
            "type": "number"
          },
          "dimensionX": {
            "description": "The product dimension X in cm",
            "type": "number"
          },
          "dimensionY": {
            "description": "The product dimension Y in cm",
            "type": "number"
          },
          "dimensionZ": {
            "description": "The product dimension Z in cm",
            "type": "number"
          },
          "hsCode": {
            "description": "The product HS code",
            "type": "string"
          },
          "id": {
            "description": "The product ID",
            "type": "integer"
          },
          "image": {
            "description": "The product image (As a base64 encoded string)",
            "type": "string"
          },
          "name": {
            "description": "The product name",
            "type": "string"
          },
          "quantityAvailable": {
            "description": "The physical available product quantity",
            "type": "integer"
          },
          "quantityIncoming": {
            "description": "The incoming product quantity",
            "type": "integer"
          },
          "quantityOnHand": {
            "description": "The product quantity on hand",
            "type": "integer"
          },
          "quantityOutgoing": {
            "description": "The outgoing product quantity",
            "type": "integer"
          },
          "quantitySold": {
            "description": "The sold product quantity",
            "type": "integer"
          },
          "reference": {
            "description": "Your product reference (This could be your product ID)",
            "type": "string"
          },
          "sellingPrice": {
            "description": "The product selling price (Excluding taxes)",
            "type": "number"
          },
          "sku": {
            "description": "The product warehouse SKU",
            "type": "string"
          },
          "volume": {
            "description": "The product volume in L (Calculated using dimensions)",
            "type": "number"
          },
          "weight": {
            "description": "The product weight in kg",
            "type": "number"
          }
        },
        "required": [
          "name",
          "barcode"
        ],
        "type": "object"
      },
      "Product:jsonld-write": {
        "description": "Product entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "barcode": {
            "description": "The product barcode",
            "type": "string"
          },
          "channelReference": {
            "description": "The product channel reference (DEPRECATED)",
            "type": "string"
          },
          "costPrice": {
            "description": "The product cost price (Excluding taxes)",
            "type": "number"
          },
          "dimensionX": {
            "description": "The product dimension X in cm",
            "type": "number"
          },
          "dimensionY": {
            "description": "The product dimension Y in cm",
            "type": "number"
          },
          "dimensionZ": {
            "description": "The product dimension Z in cm",
            "type": "number"
          },
          "hsCode": {
            "description": "The product HS code",
            "type": "string"
          },
          "image": {
            "description": "The product image (As a base64 encoded string)",
            "type": "string"
          },
          "name": {
            "description": "The product name",
            "type": "string"
          },
          "reference": {
            "description": "Your product reference (This could be your product ID)",
            "type": "string"
          },
          "sellingPrice": {
            "description": "The product selling price (Excluding taxes)",
            "type": "number"
          },
          "weight": {
            "description": "The product weight in kg",
            "type": "number"
          }
        },
        "required": [
          "name",
          "barcode"
        ],
        "type": "object"
      },
      "Purchase-read": {
        "description": "Purchase entity",
        "properties": {
          "id": {
            "description": "The purchase ID",
            "type": "integer"
          },
          "name": {
            "description": "The purchase name",
            "type": "string"
          },
          "plannedDate": {
            "description": "The purchase planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "supplierId": {
            "description": "The purchase supplier ID",
            "type": "integer"
          }
        },
        "required": [
          "plannedDate",
          "supplierId"
        ],
        "type": "object"
      },
      "Purchase-write": {
        "description": "Purchase entity",
        "properties": {
          "channelReference": {
            "description": "The purchase channel reference (DEPRECATED)",
            "type": "string"
          },
          "plannedDate": {
            "description": "The purchase planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "description": "Your purchase reference (This could be your purchase ID)",
            "type": "string"
          },
          "supplierId": {
            "description": "The purchase supplier ID",
            "type": "integer"
          }
        },
        "required": [
          "plannedDate",
          "supplierId"
        ],
        "type": "object"
      },
      "Purchase:jsonld-read": {
        "description": "Purchase entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The purchase ID",
            "type": "integer"
          },
          "name": {
            "description": "The purchase name",
            "type": "string"
          },
          "plannedDate": {
            "description": "The purchase planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "supplierId": {
            "description": "The purchase supplier ID",
            "type": "integer"
          }
        },
        "required": [
          "plannedDate",
          "supplierId"
        ],
        "type": "object"
      },
      "Purchase:jsonld-write": {
        "description": "Purchase entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "channelReference": {
            "description": "The purchase channel reference (DEPRECATED)",
            "type": "string"
          },
          "plannedDate": {
            "description": "The purchase planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "reference": {
            "description": "Your purchase reference (This could be your purchase ID)",
            "type": "string"
          },
          "supplierId": {
            "description": "The purchase supplier ID",
            "type": "integer"
          }
        },
        "required": [
          "plannedDate",
          "supplierId"
        ],
        "type": "object"
      },
      "PurchaseLine-read": {
        "description": "Purchase Line entity",
        "properties": {
          "description": {
            "description": "The purchase line description",
            "type": "string"
          },
          "id": {
            "description": "The purchase line ID",
            "type": "integer"
          },
          "plannedDate": {
            "description": "The purchase line planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "purchaseId": {
            "description": "The purchase ID",
            "type": "integer"
          },
          "qtyReceived": {
            "description": "The purchase line quantity received",
            "type": "integer"
          },
          "quantity": {
            "description": "The purchase line quantity",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "purchaseId"
        ],
        "type": "object"
      },
      "PurchaseLine-write": {
        "description": "Purchase Line entity",
        "properties": {
          "description": {
            "description": "The purchase line description",
            "type": "string"
          },
          "plannedDate": {
            "description": "The purchase line planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "purchaseId": {
            "description": "The purchase ID",
            "type": "integer"
          },
          "quantity": {
            "description": "The purchase line quantity",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "purchaseId"
        ],
        "type": "object"
      },
      "PurchaseLine:jsonld-read": {
        "description": "Purchase Line entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The purchase line description",
            "type": "string"
          },
          "id": {
            "description": "The purchase line ID",
            "type": "integer"
          },
          "plannedDate": {
            "description": "The purchase line planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "purchaseId": {
            "description": "The purchase ID",
            "type": "integer"
          },
          "qtyReceived": {
            "description": "The purchase line quantity received",
            "type": "integer"
          },
          "quantity": {
            "description": "The purchase line quantity",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "purchaseId"
        ],
        "type": "object"
      },
      "PurchaseLine:jsonld-write": {
        "description": "Purchase Line entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The purchase line description",
            "type": "string"
          },
          "plannedDate": {
            "description": "The purchase line planned delivery date",
            "format": "date-time",
            "type": "string"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "purchaseId": {
            "description": "The purchase ID",
            "type": "integer"
          },
          "quantity": {
            "description": "The purchase line quantity",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "purchaseId"
        ],
        "type": "object"
      },
      "Sale-read": {
        "description": "Sale entity",
        "properties": {
          "carrierId": {
            "description": "The sale carrier ID",
            "type": "integer"
          },
          "id": {
            "description": "The sale ID",
            "type": "integer"
          },
          "invoiceAddressId": {
            "description": "The sale invoice address ID",
            "type": "integer"
          },
          "lineIds": {
            "description": "The sale line IDs",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "name": {
            "description": "The sale name",
            "type": "string"
          },
          "shipmentIds": {
            "description": "The sale shipment IDs",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "shippingAddressId": {
            "description": "The sale shipping address ID",
            "type": "integer"
          },
          "status": {
            "description": "The sale warehouse status",
            "enum": [
              "none",
              "hold",
              "stock",
              "pick",
              "pack",
              "ship",
              "cancel"
            ],
            "type": "string"
          }
        },
        "required": [
          "invoiceAddressId",
          "shippingAddressId"
        ],
        "type": "object"
      },
      "Sale-write": {
        "description": "Sale entity",
        "properties": {
          "carrierId": {
            "description": "The sale carrier ID",
            "type": "integer"
          },
          "channelReference": {
            "description": "The sale channel reference (DEPRECATED)",
            "type": "string"
          },
          "invoiceAddressId": {
            "description": "The sale invoice address ID",
            "type": "integer"
          },
          "reference": {
            "description": "Your sale reference (This could be your sale ID)",
            "type": "string"
          },
          "shippingAddressId": {
            "description": "The sale shipping address ID",
            "type": "integer"
          }
        },
        "required": [
          "invoiceAddressId",
          "shippingAddressId"
        ],
        "type": "object"
      },
      "Sale:jsonld-read": {
        "description": "Sale entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "carrierId": {
            "description": "The sale carrier ID",
            "type": "integer"
          },
          "id": {
            "description": "The sale ID",
            "type": "integer"
          },
          "invoiceAddressId": {
            "description": "The sale invoice address ID",
            "type": "integer"
          },
          "lineIds": {
            "description": "The sale line IDs",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "name": {
            "description": "The sale name",
            "type": "string"
          },
          "shipmentIds": {
            "description": "The sale shipment IDs",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "shippingAddressId": {
            "description": "The sale shipping address ID",
            "type": "integer"
          },
          "status": {
            "description": "The sale warehouse status",
            "enum": [
              "none",
              "hold",
              "stock",
              "pick",
              "pack",
              "ship",
              "cancel"
            ],
            "type": "string"
          }
        },
        "required": [
          "invoiceAddressId",
          "shippingAddressId"
        ],
        "type": "object"
      },
      "Sale:jsonld-write": {
        "description": "Sale entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "carrierId": {
            "description": "The sale carrier ID",
            "type": "integer"
          },
          "channelReference": {
            "description": "The sale channel reference (DEPRECATED)",
            "type": "string"
          },
          "invoiceAddressId": {
            "description": "The sale invoice address ID",
            "type": "integer"
          },
          "reference": {
            "description": "Your sale reference (This could be your sale ID)",
            "type": "string"
          },
          "shippingAddressId": {
            "description": "The sale shipping address ID",
            "type": "integer"
          }
        },
        "required": [
          "invoiceAddressId",
          "shippingAddressId"
        ],
        "type": "object"
      },
      "SaleLine-read": {
        "description": "Sale Line entity",
        "properties": {
          "description": {
            "description": "The sale line description",
            "type": "string"
          },
          "id": {
            "description": "The sale line ID",
            "type": "integer"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "quantity": {
            "description": "The sale line quantity",
            "type": "integer"
          },
          "quantityDelivered": {
            "description": "The sale line quantity delivered",
            "type": "integer"
          },
          "saleId": {
            "description": "The sale ID",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "saleId"
        ],
        "type": "object"
      },
      "SaleLine-write": {
        "description": "Sale Line entity",
        "properties": {
          "description": {
            "description": "The sale line description",
            "type": "string"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "quantity": {
            "description": "The sale line quantity",
            "type": "integer"
          },
          "saleId": {
            "description": "The sale ID",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "saleId"
        ],
        "type": "object"
      },
      "SaleLine:jsonld-read": {
        "description": "Sale Line entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The sale line description",
            "type": "string"
          },
          "id": {
            "description": "The sale line ID",
            "type": "integer"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "quantity": {
            "description": "The sale line quantity",
            "type": "integer"
          },
          "quantityDelivered": {
            "description": "The sale line quantity delivered",
            "type": "integer"
          },
          "saleId": {
            "description": "The sale ID",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "saleId"
        ],
        "type": "object"
      },
      "SaleLine:jsonld-write": {
        "description": "Sale Line entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The sale line description",
            "type": "string"
          },
          "productId": {
            "description": "The product ID",
            "type": "integer"
          },
          "quantity": {
            "description": "The sale line quantity",
            "type": "integer"
          },
          "saleId": {
            "description": "The sale ID",
            "type": "integer"
          }
        },
        "required": [
          "description",
          "quantity",
          "productId",
          "saleId"
        ],
        "type": "object"
      },
      "Shipment-read": {
        "description": "Shipment entity",
        "properties": {
          "carrierId": {
            "description": "The shipment carrier ID",
            "type": "integer"
          },
          "id": {
            "description": "The shipment ID",
            "type": "integer"
          },
          "saleId": {
            "description": "The sale ID",
            "type": "integer"
          },
          "shippedAt": {
            "description": "The shipment date",
            "format": "date-time",
            "type": "string"
          },
          "trackingCodes": {
            "description": "The shipment tracking codes",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "saleId",
          "shippedAt"
        ],
        "type": "object"
      },
      "Shipment:jsonld-read": {
        "description": "Shipment entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "carrierId": {
            "description": "The shipment carrier ID",
            "type": "integer"
          },
          "id": {
            "description": "The shipment ID",
            "type": "integer"
          },
          "saleId": {
            "description": "The sale ID",
            "type": "integer"
          },
          "shippedAt": {
            "description": "The shipment date",
            "format": "date-time",
            "type": "string"
          },
          "trackingCodes": {
            "description": "The shipment tracking codes",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "saleId",
          "shippedAt"
        ],
        "type": "object"
      },
      "Supplier-read": {
        "description": "Supplier entity",
        "properties": {
          "city": {
            "description": "The supplier city",
            "type": "string"
          },
          "countryCode": {
            "description": "The supplier country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The supplier email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The supplier house number",
            "type": "string"
          },
          "id": {
            "description": "The supplier ID",
            "type": "integer"
          },
          "name": {
            "description": "The supplier name",
            "type": "string"
          },
          "phone": {
            "description": "The supplier phone",
            "type": "string"
          },
          "street": {
            "description": "The supplier street",
            "type": "string"
          },
          "street2": {
            "description": "The supplier street 2",
            "type": "string"
          },
          "zip": {
            "description": "The supplier zip",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Supplier-write": {
        "description": "Supplier entity",
        "properties": {
          "city": {
            "description": "The supplier city",
            "type": "string"
          },
          "countryCode": {
            "description": "The supplier country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The supplier email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The supplier house number",
            "type": "string"
          },
          "name": {
            "description": "The supplier name",
            "type": "string"
          },
          "phone": {
            "description": "The supplier phone",
            "type": "string"
          },
          "street": {
            "description": "The supplier street",
            "type": "string"
          },
          "street2": {
            "description": "The supplier street 2",
            "type": "string"
          },
          "zip": {
            "description": "The supplier zip",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Supplier:jsonld-read": {
        "description": "Supplier entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "city": {
            "description": "The supplier city",
            "type": "string"
          },
          "countryCode": {
            "description": "The supplier country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The supplier email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The supplier house number",
            "type": "string"
          },
          "id": {
            "description": "The supplier ID",
            "type": "integer"
          },
          "name": {
            "description": "The supplier name",
            "type": "string"
          },
          "phone": {
            "description": "The supplier phone",
            "type": "string"
          },
          "street": {
            "description": "The supplier street",
            "type": "string"
          },
          "street2": {
            "description": "The supplier street 2",
            "type": "string"
          },
          "zip": {
            "description": "The supplier zip",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Supplier:jsonld-write": {
        "description": "Supplier entity",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "city": {
            "description": "The supplier city",
            "type": "string"
          },
          "countryCode": {
            "description": "The supplier country code (ISO 3166-1 alpha-2 format)",
            "type": "string"
          },
          "email": {
            "description": "The supplier email",
            "type": "string"
          },
          "houseNumber": {
            "description": "The supplier house number",
            "type": "string"
          },
          "name": {
            "description": "The supplier name",
            "type": "string"
          },
          "phone": {
            "description": "The supplier phone",
            "type": "string"
          },
          "street": {
            "description": "The supplier street",
            "type": "string"
          },
          "street2": {
            "description": "The supplier street 2",
            "type": "string"
          },
          "zip": {
            "description": "The supplier zip",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "User-authenticate": {
        "description": "",
        "properties": {
          "email": {
            "description": "The user email address",
            "type": "string"
          },
          "password": {
            "description": "The user password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      },
      "User:jsonld-authenticate": {
        "description": "",
        "properties": {
          "json_context": {
            "readOnly": true,
            "type": "string"
          },
          "json_id": {
            "readOnly": true,
            "type": "string"
          },
          "json_type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "description": "The user email address",
            "type": "string"
          },
          "password": {
            "description": "The user password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "The E-fulfilment Shop API allows you to integrate your service with our warehouse.",
    "title": "E-fulfilment Shop API",
    "version": "1.3.0"
  },
  "openapi": "3.0.2",
  "paths": {
    "/addresses": {
      "get": {
        "operationId": "getAddressCollection",
        "parameters": [
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Address-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/Address:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Address-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Address collection response"
          }
        },
        "summary": "Retrieves the collection of Address resources.",
        "tags": [
          "Address"
        ]
      },
      "post": {
        "operationId": "postAddressCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Address:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Address-write"
              }
            }
          },
          "description": "The new Address resource"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Address:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              }
            },
            "description": "Address resource created",
            "links": {
              "GetAddressItem": {
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /addresses/{id}`.",
                "operationId": "getAddressItem",
                "parameters": {
                  "id": "$response.body#/id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Creates a Address resource.",
        "tags": [
          "Address"
        ]
      }
    },
    "/addresses/{id}": {
      "delete": {
        "operationId": "deleteAddressItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Address resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Address resource.",
        "tags": [
          "Address"
        ]
      },
      "get": {
        "operationId": "getAddressItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Address:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              }
            },
            "description": "Address resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Address resource.",
        "tags": [
          "Address"
        ]
      },
      "patch": {
        "operationId": "patchAddressItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Address-write"
              }
            }
          },
          "description": "The updated Address resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Address:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              }
            },
            "description": "Address resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Address resource.",
        "tags": [
          "Address"
        ]
      },
      "put": {
        "operationId": "putAddressItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Address:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Address-write"
              }
            }
          },
          "description": "The updated Address resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Address:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Address-read"
                }
              }
            },
            "description": "Address resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Address resource.",
        "tags": [
          "Address"
        ]
      }
    },
    "/authentication_token": {
      "post": {
        "operationId": "postAuthentication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User-authenticate"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/User:jsonld-authenticate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Valid credentials, returning a new token"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "example": 401,
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Invalid credentials"
          }
        },
        "summary": "Performs login, returning a token on success.",
        "tags": [
          "Authentication token"
        ]
      }
    },
    "/carriers": {
      "get": {
        "operationId": "getCarrierCollection",
        "parameters": [
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Carrier-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/Carrier:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Carrier-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Carrier collection response"
          }
        },
        "summary": "Retrieves the collection of Carrier resources.",
        "tags": [
          "Carrier"
        ]
      }
    },
    "/carriers/{id}": {
      "get": {
        "operationId": "getCarrierItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier-read"
                }
              }
            },
            "description": "Carrier resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Carrier resource.",
        "tags": [
          "Carrier"
        ]
      }
    },
    "/products": {
      "get": {
        "operationId": "getProductCollection",
        "parameters": [
          {
            "description": "The product name",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The product warehouse SKU",
            "in": "query",
            "name": "sku",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The product barcode",
            "in": "query",
            "name": "barcode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The product channel reference (DEPRECATED)",
            "in": "query",
            "name": "channelReference",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Your product reference (This could be your product ID)",
            "in": "query",
            "name": "reference",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Product-read_collection"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/Product:jsonld-read_collection"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Product-read_collection"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Product collection response"
          }
        },
        "summary": "Retrieves the collection of Product resources.",
        "tags": [
          "Product"
        ]
      },
      "post": {
        "operationId": "postProductCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Product:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Product-write"
              }
            }
          },
          "description": "The new Product resource"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product:jsonld-read_item"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              }
            },
            "description": "Product resource created",
            "links": {
              "GetProductItem": {
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /products/{id}`.",
                "operationId": "getProductItem",
                "parameters": {
                  "id": "$response.body#/id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Creates a Product resource.",
        "tags": [
          "Product"
        ]
      }
    },
    "/products/{id}": {
      "delete": {
        "operationId": "deleteProductItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Product resource.",
        "tags": [
          "Product"
        ]
      },
      "get": {
        "operationId": "getProductItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product:jsonld-read_item"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              }
            },
            "description": "Product resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Product resource.",
        "tags": [
          "Product"
        ]
      },
      "patch": {
        "operationId": "patchProductItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Product-write"
              }
            }
          },
          "description": "The updated Product resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product:jsonld-read_item"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              }
            },
            "description": "Product resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Product resource.",
        "tags": [
          "Product"
        ]
      },
      "put": {
        "operationId": "putProductItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Product:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Product-write"
              }
            }
          },
          "description": "The updated Product resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product:jsonld-read_item"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-read_item"
                }
              }
            },
            "description": "Product resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Product resource.",
        "tags": [
          "Product"
        ]
      }
    },
    "/purchase_lines": {
      "get": {
        "operationId": "getPurchaseLineCollection",
        "parameters": [
          {
            "description": "The purchase ID",
            "in": "query",
            "name": "purchaseId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PurchaseLine-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/PurchaseLine:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PurchaseLine-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "PurchaseLine collection response"
          }
        },
        "summary": "Retrieves the collection of PurchaseLine resources.",
        "tags": [
          "PurchaseLine"
        ]
      },
      "post": {
        "operationId": "postPurchaseLineCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseLine-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseLine:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseLine-write"
              }
            }
          },
          "description": "The new PurchaseLine resource"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              }
            },
            "description": "PurchaseLine resource created",
            "links": {
              "GetPurchaseLineItem": {
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /purchase_lines/{id}`.",
                "operationId": "getPurchaseLineItem",
                "parameters": {
                  "id": "$response.body#/id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Creates a PurchaseLine resource.",
        "tags": [
          "PurchaseLine"
        ]
      }
    },
    "/purchase_lines/{id}": {
      "get": {
        "operationId": "getPurchaseLineItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              }
            },
            "description": "PurchaseLine resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a PurchaseLine resource.",
        "tags": [
          "PurchaseLine"
        ]
      },
      "patch": {
        "operationId": "patchPurchaseLineItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseLine-write"
              }
            }
          },
          "description": "The updated PurchaseLine resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              }
            },
            "description": "PurchaseLine resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the PurchaseLine resource.",
        "tags": [
          "PurchaseLine"
        ]
      },
      "put": {
        "operationId": "putPurchaseLineItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseLine-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseLine:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseLine-write"
              }
            }
          },
          "description": "The updated PurchaseLine resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseLine-read"
                }
              }
            },
            "description": "PurchaseLine resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the PurchaseLine resource.",
        "tags": [
          "PurchaseLine"
        ]
      }
    },
    "/purchases": {
      "get": {
        "operationId": "getPurchaseCollection",
        "parameters": [
          {
            "description": "The purchase channel reference (DEPRECATED)",
            "in": "query",
            "name": "channelReference",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Your purchase reference (This could be your purchase ID)",
            "in": "query",
            "name": "reference",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Purchase-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/Purchase:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Purchase-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Purchase collection response"
          }
        },
        "summary": "Retrieves the collection of Purchase resources.",
        "tags": [
          "Purchase"
        ]
      },
      "post": {
        "operationId": "postPurchaseCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Purchase-write"
              }
            }
          },
          "description": "The new Purchase resource"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              }
            },
            "description": "Purchase resource created",
            "links": {
              "GetPurchaseItem": {
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /purchases/{id}`.",
                "operationId": "getPurchaseItem",
                "parameters": {
                  "id": "$response.body#/id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Creates a Purchase resource.",
        "tags": [
          "Purchase"
        ]
      }
    },
    "/purchases/{id}": {
      "delete": {
        "operationId": "deletePurchaseItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Purchase resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Purchase resource.",
        "tags": [
          "Purchase"
        ]
      },
      "get": {
        "operationId": "getPurchaseItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              }
            },
            "description": "Purchase resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Purchase resource.",
        "tags": [
          "Purchase"
        ]
      },
      "patch": {
        "operationId": "patchPurchaseItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase-write"
              }
            }
          },
          "description": "The updated Purchase resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              }
            },
            "description": "Purchase resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Purchase resource.",
        "tags": [
          "Purchase"
        ]
      },
      "put": {
        "operationId": "putPurchaseItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Purchase-write"
              }
            }
          },
          "description": "The updated Purchase resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase-read"
                }
              }
            },
            "description": "Purchase resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Purchase resource.",
        "tags": [
          "Purchase"
        ]
      }
    },
    "/sale_lines": {
      "get": {
        "operationId": "getSaleLineCollection",
        "parameters": [
          {
            "description": "The sale ID",
            "in": "query",
            "name": "saleId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SaleLine-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/SaleLine:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SaleLine-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "SaleLine collection response"
          }
        },
        "summary": "Retrieves the collection of SaleLine resources.",
        "tags": [
          "SaleLine"
        ]
      },
      "post": {
        "operationId": "postSaleLineCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleLine-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleLine:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SaleLine-write"
              }
            }
          },
          "description": "The new SaleLine resource"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              }
            },
            "description": "SaleLine resource created",
            "links": {
              "GetSaleLineItem": {
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sale_lines/{id}`.",
                "operationId": "getSaleLineItem",
                "parameters": {
                  "id": "$response.body#/id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Creates a SaleLine resource.",
        "tags": [
          "SaleLine"
        ]
      }
    },
    "/sale_lines/{id}": {
      "get": {
        "operationId": "getSaleLineItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              }
            },
            "description": "SaleLine resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a SaleLine resource.",
        "tags": [
          "SaleLine"
        ]
      },
      "patch": {
        "operationId": "patchSaleLineItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleLine-write"
              }
            }
          },
          "description": "The updated SaleLine resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              }
            },
            "description": "SaleLine resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the SaleLine resource.",
        "tags": [
          "SaleLine"
        ]
      },
      "put": {
        "operationId": "putSaleLineItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleLine-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/SaleLine:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/SaleLine-write"
              }
            }
          },
          "description": "The updated SaleLine resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SaleLine-read"
                }
              }
            },
            "description": "SaleLine resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the SaleLine resource.",
        "tags": [
          "SaleLine"
        ]
      }
    },
    "/sales": {
      "get": {
        "operationId": "getSaleCollection",
        "parameters": [
          {
            "description": "The sale channel reference (DEPRECATED)",
            "in": "query",
            "name": "channelReference",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Your sale reference (This could be your sale ID)",
            "in": "query",
            "name": "reference",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Sale-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/Sale:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Sale-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Sale collection response"
          }
        },
        "summary": "Retrieves the collection of Sale resources.",
        "tags": [
          "Sale"
        ]
      },
      "post": {
        "operationId": "postSaleCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sale-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Sale:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Sale-write"
              }
            }
          },
          "description": "The new Sale resource"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              }
            },
            "description": "Sale resource created",
            "links": {
              "GetSaleItem": {
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sales/{id}`.",
                "operationId": "getSaleItem",
                "parameters": {
                  "id": "$response.body#/id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Creates a Sale resource.",
        "tags": [
          "Sale"
        ]
      }
    },
    "/sales/{id}": {
      "delete": {
        "operationId": "deleteSaleItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Sale resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Sale resource.",
        "tags": [
          "Sale"
        ]
      },
      "get": {
        "operationId": "getSaleItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              }
            },
            "description": "Sale resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Sale resource.",
        "tags": [
          "Sale"
        ]
      },
      "patch": {
        "operationId": "patchSaleItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Sale-write"
              }
            }
          },
          "description": "The updated Sale resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              }
            },
            "description": "Sale resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Sale resource.",
        "tags": [
          "Sale"
        ]
      },
      "put": {
        "operationId": "putSaleItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sale-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Sale:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Sale-write"
              }
            }
          },
          "description": "The updated Sale resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              }
            },
            "description": "Sale resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Sale resource.",
        "tags": [
          "Sale"
        ]
      }
    },
    "/sales/{id}/cancel": {
      "post": {
        "operationId": "cancelSale",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "application/ld+json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale:jsonld-read"
                }
              }
            }
          }
        },
        "summary": "Cancels a sale.",
        "tags": [
          "Sale"
        ]
      }
    },
    "/sales/{id}/confirm": {
      "post": {
        "operationId": "confirmSale",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "application/ld+json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale:jsonld-read"
                }
              }
            }
          }
        },
        "summary": "Confirms a sale.",
        "tags": [
          "Sale"
        ]
      }
    },
    "/shipments": {
      "get": {
        "operationId": "getShipmentCollection",
        "parameters": [
          {
            "description": "The sale ID",
            "in": "query",
            "name": "saleId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Shipment-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/Shipment:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Shipment-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Shipment collection response"
          }
        },
        "summary": "Retrieves the collection of Shipment resources.",
        "tags": [
          "Shipment"
        ]
      }
    },
    "/shipments/{id}": {
      "get": {
        "operationId": "getShipmentItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment-read"
                }
              }
            },
            "description": "Shipment resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Shipment resource.",
        "tags": [
          "Shipment"
        ]
      }
    },
    "/suppliers": {
      "get": {
        "operationId": "getSupplierCollection",
        "parameters": [
          {
            "description": "The collection page number",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items per page",
            "in": "query",
            "name": "items",
            "required": false,
            "schema": {
              "default": 30,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Supplier-read"
                  },
                  "type": "array"
                }
              },
              "application/ld+json": {
                "schema": {
                  "properties": {
                    "hydra:member": {
                      "items": {
                        "$ref": "#/components/schemas/Supplier:jsonld-read"
                      },
                      "type": "array"
                    },
                    "hydra:search": {
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "items": {
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "property": {
                                "type": "string"
                              },
                              "required": {
                                "type": "boolean"
                              },
                              "variable": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "hydra:totalItems": {
                      "minimum": 0,
                      "type": "integer"
                    },
                    "hydra:view": {
                      "properties": {
                        "@id": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:last": {
                          "format": "iri-reference",
                          "type": "string"
                        },
                        "hydra:next": {
                          "format": "iri-reference",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "hydra:member"
                  ],
                  "type": "object"
                }
              },
              "text/html": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Supplier-read"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Supplier collection response"
          }
        },
        "summary": "Retrieves the collection of Supplier resources.",
        "tags": [
          "Supplier"
        ]
      },
      "post": {
        "operationId": "postSupplierCollection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Supplier-write"
              }
            }
          },
          "description": "The new Supplier resource"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              }
            },
            "description": "Supplier resource created",
            "links": {
              "GetSupplierItem": {
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /suppliers/{id}`.",
                "operationId": "getSupplierItem",
                "parameters": {
                  "id": "$response.body#/id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Creates a Supplier resource.",
        "tags": [
          "Supplier"
        ]
      }
    },
    "/suppliers/{id}": {
      "delete": {
        "operationId": "deleteSupplierItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Supplier resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Supplier resource.",
        "tags": [
          "Supplier"
        ]
      },
      "get": {
        "operationId": "getSupplierItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              }
            },
            "description": "Supplier resource response"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Supplier resource.",
        "tags": [
          "Supplier"
        ]
      },
      "patch": {
        "operationId": "patchSupplierItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier-write"
              }
            }
          },
          "description": "The updated Supplier resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              }
            },
            "description": "Supplier resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Updates the Supplier resource.",
        "tags": [
          "Supplier"
        ]
      },
      "put": {
        "operationId": "putSupplierItem",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier-write"
              }
            },
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/Supplier:jsonld-write"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Supplier-write"
              }
            }
          },
          "description": "The updated Supplier resource"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              },
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier:jsonld-read"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier-read"
                }
              }
            },
            "description": "Supplier resource updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Replaces the Supplier resource.",
        "tags": [
          "Supplier"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "/v1"
    }
  ]
}