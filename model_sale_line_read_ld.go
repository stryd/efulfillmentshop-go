/*
E-fulfilment Shop API

The E-fulfilment Shop API allows you to integrate your service with our warehouse.

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
)

// SaleLineReadLd Sale Line entity
type SaleLineReadLd struct {
	LdContext *string `json:"@context,omitempty"`
	LdId      *string `json:"@id,omitempty"`
	LdType    *string `json:"@type,omitempty"`
	// The sale line description
	Description string `json:"description"`
	// The sale line ID
	Id *int32 `json:"id,omitempty"`
	// The product ID
	ProductId int32 `json:"productId"`
	// The sale line quantity
	Quantity int32 `json:"quantity"`
	// The sale line quantity delivered
	QuantityDelivered *int32 `json:"quantityDelivered,omitempty"`
	// The sale ID
	SaleId int32 `json:"saleId"`
}

// NewSaleLineReadLd instantiates a new SaleLineReadLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaleLineReadLd(description string, productId int32, quantity int32, saleId int32) *SaleLineReadLd {
	this := SaleLineReadLd{}
	this.Description = description
	this.ProductId = productId
	this.Quantity = quantity
	this.SaleId = saleId
	return &this
}

// NewSaleLineReadLdWithDefaults instantiates a new SaleLineReadLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaleLineReadLdWithDefaults() *SaleLineReadLd {
	this := SaleLineReadLd{}
	return &this
}

// GetLdContext returns the LdContext field value if set, zero value otherwise.
func (o *SaleLineReadLd) GetLdContext() string {
	if o == nil || o.LdContext == nil {
		var ret string
		return ret
	}
	return *o.LdContext
}

// GetLdContextOk returns a tuple with the LdContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetLdContextOk() (*string, bool) {
	if o == nil || o.LdContext == nil {
		return nil, false
	}
	return o.LdContext, true
}

// HasLdContext returns a boolean if a field has been set.
func (o *SaleLineReadLd) HasLdContext() bool {
	if o != nil && o.LdContext != nil {
		return true
	}

	return false
}

// SetLdContext gets a reference to the given string and assigns it to the LdContext field.
func (o *SaleLineReadLd) SetLdContext(v string) {
	o.LdContext = &v
}

// GetLdId returns the LdId field value if set, zero value otherwise.
func (o *SaleLineReadLd) GetLdId() string {
	if o == nil || o.LdId == nil {
		var ret string
		return ret
	}
	return *o.LdId
}

// GetLdIdOk returns a tuple with the LdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetLdIdOk() (*string, bool) {
	if o == nil || o.LdId == nil {
		return nil, false
	}
	return o.LdId, true
}

// HasLdId returns a boolean if a field has been set.
func (o *SaleLineReadLd) HasLdId() bool {
	if o != nil && o.LdId != nil {
		return true
	}

	return false
}

// SetLdId gets a reference to the given string and assigns it to the LdId field.
func (o *SaleLineReadLd) SetLdId(v string) {
	o.LdId = &v
}

// GetLdType returns the LdType field value if set, zero value otherwise.
func (o *SaleLineReadLd) GetLdType() string {
	if o == nil || o.LdType == nil {
		var ret string
		return ret
	}
	return *o.LdType
}

// GetLdTypeOk returns a tuple with the LdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetLdTypeOk() (*string, bool) {
	if o == nil || o.LdType == nil {
		return nil, false
	}
	return o.LdType, true
}

// HasLdType returns a boolean if a field has been set.
func (o *SaleLineReadLd) HasLdType() bool {
	if o != nil && o.LdType != nil {
		return true
	}

	return false
}

// SetLdType gets a reference to the given string and assigns it to the LdType field.
func (o *SaleLineReadLd) SetLdType(v string) {
	o.LdType = &v
}

// GetDescription returns the Description field value
func (o *SaleLineReadLd) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SaleLineReadLd) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SaleLineReadLd) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SaleLineReadLd) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SaleLineReadLd) SetId(v int32) {
	o.Id = &v
}

// GetProductId returns the ProductId field value
func (o *SaleLineReadLd) GetProductId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetProductIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *SaleLineReadLd) SetProductId(v int32) {
	o.ProductId = v
}

// GetQuantity returns the Quantity field value
func (o *SaleLineReadLd) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *SaleLineReadLd) SetQuantity(v int32) {
	o.Quantity = v
}

// GetQuantityDelivered returns the QuantityDelivered field value if set, zero value otherwise.
func (o *SaleLineReadLd) GetQuantityDelivered() int32 {
	if o == nil || o.QuantityDelivered == nil {
		var ret int32
		return ret
	}
	return *o.QuantityDelivered
}

// GetQuantityDeliveredOk returns a tuple with the QuantityDelivered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetQuantityDeliveredOk() (*int32, bool) {
	if o == nil || o.QuantityDelivered == nil {
		return nil, false
	}
	return o.QuantityDelivered, true
}

// HasQuantityDelivered returns a boolean if a field has been set.
func (o *SaleLineReadLd) HasQuantityDelivered() bool {
	if o != nil && o.QuantityDelivered != nil {
		return true
	}

	return false
}

// SetQuantityDelivered gets a reference to the given int32 and assigns it to the QuantityDelivered field.
func (o *SaleLineReadLd) SetQuantityDelivered(v int32) {
	o.QuantityDelivered = &v
}

// GetSaleId returns the SaleId field value
func (o *SaleLineReadLd) GetSaleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SaleId
}

// GetSaleIdOk returns a tuple with the SaleId field value
// and a boolean to check if the value has been set.
func (o *SaleLineReadLd) GetSaleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaleId, true
}

// SetSaleId sets field value
func (o *SaleLineReadLd) SetSaleId(v int32) {
	o.SaleId = v
}

func (o SaleLineReadLd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdContext != nil {
		toSerialize["ld-context"] = o.LdContext
	}
	if o.LdId != nil {
		toSerialize["ld-id"] = o.LdId
	}
	if o.LdType != nil {
		toSerialize["ld-type"] = o.LdType
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["productId"] = o.ProductId
	}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	if o.QuantityDelivered != nil {
		toSerialize["quantityDelivered"] = o.QuantityDelivered
	}
	if true {
		toSerialize["saleId"] = o.SaleId
	}
	return json.Marshal(toSerialize)
}

type NullableSaleLineReadLd struct {
	value *SaleLineReadLd
	isSet bool
}

func (v NullableSaleLineReadLd) Get() *SaleLineReadLd {
	return v.value
}

func (v *NullableSaleLineReadLd) Set(val *SaleLineReadLd) {
	v.value = val
	v.isSet = true
}

func (v NullableSaleLineReadLd) IsSet() bool {
	return v.isSet
}

func (v *NullableSaleLineReadLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaleLineReadLd(val *SaleLineReadLd) *NullableSaleLineReadLd {
	return &NullableSaleLineReadLd{value: val, isSet: true}
}

func (v NullableSaleLineReadLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaleLineReadLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
