/*
 * E-fulfilment Shop API
 *
 * The E-fulfilment Shop API allows you to integrate your service with our warehouse.
 *
 * API version: 1.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfillment_go

import (
	"encoding/json"
	"time"
)

// PurchaseLineWrite Purchase Line entity
type PurchaseLineWrite struct {
	// The purchase line description
	Description string `json:"description"`
	// The purchase line planned delivery date
	PlannedDate *time.Time `json:"plannedDate,omitempty"`
	// The product ID
	ProductId int32 `json:"productId"`
	// The purchase ID
	PurchaseId int32 `json:"purchaseId"`
	// The purchase line quantity
	Quantity int32 `json:"quantity"`
}

// NewPurchaseLineWrite instantiates a new PurchaseLineWrite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseLineWrite(description string, productId int32, purchaseId int32, quantity int32, ) *PurchaseLineWrite {
	this := PurchaseLineWrite{}
	this.Description = description
	this.ProductId = productId
	this.PurchaseId = purchaseId
	this.Quantity = quantity
	return &this
}

// NewPurchaseLineWriteWithDefaults instantiates a new PurchaseLineWrite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseLineWriteWithDefaults() *PurchaseLineWrite {
	this := PurchaseLineWrite{}
	return &this
}

// GetDescription returns the Description field value
func (o *PurchaseLineWrite) GetDescription() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineWrite) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PurchaseLineWrite) SetDescription(v string) {
	o.Description = v
}

// GetPlannedDate returns the PlannedDate field value if set, zero value otherwise.
func (o *PurchaseLineWrite) GetPlannedDate() time.Time {
	if o == nil || o.PlannedDate == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDate
}

// GetPlannedDateOk returns a tuple with the PlannedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseLineWrite) GetPlannedDateOk() (*time.Time, bool) {
	if o == nil || o.PlannedDate == nil {
		return nil, false
	}
	return o.PlannedDate, true
}

// HasPlannedDate returns a boolean if a field has been set.
func (o *PurchaseLineWrite) HasPlannedDate() bool {
	if o != nil && o.PlannedDate != nil {
		return true
	}

	return false
}

// SetPlannedDate gets a reference to the given time.Time and assigns it to the PlannedDate field.
func (o *PurchaseLineWrite) SetPlannedDate(v time.Time) {
	o.PlannedDate = &v
}

// GetProductId returns the ProductId field value
func (o *PurchaseLineWrite) GetProductId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineWrite) GetProductIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *PurchaseLineWrite) SetProductId(v int32) {
	o.ProductId = v
}

// GetPurchaseId returns the PurchaseId field value
func (o *PurchaseLineWrite) GetPurchaseId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.PurchaseId
}

// GetPurchaseIdOk returns a tuple with the PurchaseId field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineWrite) GetPurchaseIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PurchaseId, true
}

// SetPurchaseId sets field value
func (o *PurchaseLineWrite) SetPurchaseId(v int32) {
	o.PurchaseId = v
}

// GetQuantity returns the Quantity field value
func (o *PurchaseLineWrite) GetQuantity() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineWrite) GetQuantityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *PurchaseLineWrite) SetQuantity(v int32) {
	o.Quantity = v
}

func (o PurchaseLineWrite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.PlannedDate != nil {
		toSerialize["plannedDate"] = o.PlannedDate
	}
	if true {
		toSerialize["productId"] = o.ProductId
	}
	if true {
		toSerialize["purchaseId"] = o.PurchaseId
	}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullablePurchaseLineWrite struct {
	value *PurchaseLineWrite
	isSet bool
}

func (v NullablePurchaseLineWrite) Get() *PurchaseLineWrite {
	return v.value
}

func (v *NullablePurchaseLineWrite) Set(val *PurchaseLineWrite) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseLineWrite) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseLineWrite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseLineWrite(val *PurchaseLineWrite) *NullablePurchaseLineWrite {
	return &NullablePurchaseLineWrite{value: val, isSet: true}
}

func (v NullablePurchaseLineWrite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseLineWrite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


