/*
E-fulfilment Shop API

The E-fulfilment Shop API allows you to integrate your service with our warehouse.

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
)

// ProductWriteLd Product entity
type ProductWriteLd struct {
	LdContext *string `json:"@context,omitempty"`
	LdId      *string `json:"@id,omitempty"`
	LdType    *string `json:"@type,omitempty"`
	// The product barcode
	Barcode string `json:"barcode"`
	// The product channel reference (DEPRECATED)
	ChannelReference *string `json:"channelReference,omitempty"`
	// The product cost price (Excluding taxes)
	CostPrice *float32 `json:"costPrice,omitempty"`
	// The product dimension X in cm
	DimensionX *float32 `json:"dimensionX,omitempty"`
	// The product dimension Y in cm
	DimensionY *float32 `json:"dimensionY,omitempty"`
	// The product dimension Z in cm
	DimensionZ *float32 `json:"dimensionZ,omitempty"`
	// The product HS code
	HsCode *string `json:"hsCode,omitempty"`
	// The product image (As a base64 encoded string)
	Image *string `json:"image,omitempty"`
	// The product name
	Name string `json:"name"`
	// Your product reference (This could be your product ID)
	Reference *string `json:"reference,omitempty"`
	// The product selling price (Excluding taxes)
	SellingPrice *float32 `json:"sellingPrice,omitempty"`
	// The product weight in kg
	Weight *float32 `json:"weight,omitempty"`
}

// NewProductWriteLd instantiates a new ProductWriteLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductWriteLd(barcode string, name string) *ProductWriteLd {
	this := ProductWriteLd{}
	this.Barcode = barcode
	this.Name = name
	return &this
}

// NewProductWriteLdWithDefaults instantiates a new ProductWriteLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWriteLdWithDefaults() *ProductWriteLd {
	this := ProductWriteLd{}
	return &this
}

// GetLdContext returns the LdContext field value if set, zero value otherwise.
func (o *ProductWriteLd) GetLdContext() string {
	if o == nil || o.LdContext == nil {
		var ret string
		return ret
	}
	return *o.LdContext
}

// GetLdContextOk returns a tuple with the LdContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetLdContextOk() (*string, bool) {
	if o == nil || o.LdContext == nil {
		return nil, false
	}
	return o.LdContext, true
}

// HasLdContext returns a boolean if a field has been set.
func (o *ProductWriteLd) HasLdContext() bool {
	if o != nil && o.LdContext != nil {
		return true
	}

	return false
}

// SetLdContext gets a reference to the given string and assigns it to the LdContext field.
func (o *ProductWriteLd) SetLdContext(v string) {
	o.LdContext = &v
}

// GetLdId returns the LdId field value if set, zero value otherwise.
func (o *ProductWriteLd) GetLdId() string {
	if o == nil || o.LdId == nil {
		var ret string
		return ret
	}
	return *o.LdId
}

// GetLdIdOk returns a tuple with the LdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetLdIdOk() (*string, bool) {
	if o == nil || o.LdId == nil {
		return nil, false
	}
	return o.LdId, true
}

// HasLdId returns a boolean if a field has been set.
func (o *ProductWriteLd) HasLdId() bool {
	if o != nil && o.LdId != nil {
		return true
	}

	return false
}

// SetLdId gets a reference to the given string and assigns it to the LdId field.
func (o *ProductWriteLd) SetLdId(v string) {
	o.LdId = &v
}

// GetLdType returns the LdType field value if set, zero value otherwise.
func (o *ProductWriteLd) GetLdType() string {
	if o == nil || o.LdType == nil {
		var ret string
		return ret
	}
	return *o.LdType
}

// GetLdTypeOk returns a tuple with the LdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetLdTypeOk() (*string, bool) {
	if o == nil || o.LdType == nil {
		return nil, false
	}
	return o.LdType, true
}

// HasLdType returns a boolean if a field has been set.
func (o *ProductWriteLd) HasLdType() bool {
	if o != nil && o.LdType != nil {
		return true
	}

	return false
}

// SetLdType gets a reference to the given string and assigns it to the LdType field.
func (o *ProductWriteLd) SetLdType(v string) {
	o.LdType = &v
}

// GetBarcode returns the Barcode field value
func (o *ProductWriteLd) GetBarcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetBarcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Barcode, true
}

// SetBarcode sets field value
func (o *ProductWriteLd) SetBarcode(v string) {
	o.Barcode = v
}

// GetChannelReference returns the ChannelReference field value if set, zero value otherwise.
func (o *ProductWriteLd) GetChannelReference() string {
	if o == nil || o.ChannelReference == nil {
		var ret string
		return ret
	}
	return *o.ChannelReference
}

// GetChannelReferenceOk returns a tuple with the ChannelReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetChannelReferenceOk() (*string, bool) {
	if o == nil || o.ChannelReference == nil {
		return nil, false
	}
	return o.ChannelReference, true
}

// HasChannelReference returns a boolean if a field has been set.
func (o *ProductWriteLd) HasChannelReference() bool {
	if o != nil && o.ChannelReference != nil {
		return true
	}

	return false
}

// SetChannelReference gets a reference to the given string and assigns it to the ChannelReference field.
func (o *ProductWriteLd) SetChannelReference(v string) {
	o.ChannelReference = &v
}

// GetCostPrice returns the CostPrice field value if set, zero value otherwise.
func (o *ProductWriteLd) GetCostPrice() float32 {
	if o == nil || o.CostPrice == nil {
		var ret float32
		return ret
	}
	return *o.CostPrice
}

// GetCostPriceOk returns a tuple with the CostPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetCostPriceOk() (*float32, bool) {
	if o == nil || o.CostPrice == nil {
		return nil, false
	}
	return o.CostPrice, true
}

// HasCostPrice returns a boolean if a field has been set.
func (o *ProductWriteLd) HasCostPrice() bool {
	if o != nil && o.CostPrice != nil {
		return true
	}

	return false
}

// SetCostPrice gets a reference to the given float32 and assigns it to the CostPrice field.
func (o *ProductWriteLd) SetCostPrice(v float32) {
	o.CostPrice = &v
}

// GetDimensionX returns the DimensionX field value if set, zero value otherwise.
func (o *ProductWriteLd) GetDimensionX() float32 {
	if o == nil || o.DimensionX == nil {
		var ret float32
		return ret
	}
	return *o.DimensionX
}

// GetDimensionXOk returns a tuple with the DimensionX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetDimensionXOk() (*float32, bool) {
	if o == nil || o.DimensionX == nil {
		return nil, false
	}
	return o.DimensionX, true
}

// HasDimensionX returns a boolean if a field has been set.
func (o *ProductWriteLd) HasDimensionX() bool {
	if o != nil && o.DimensionX != nil {
		return true
	}

	return false
}

// SetDimensionX gets a reference to the given float32 and assigns it to the DimensionX field.
func (o *ProductWriteLd) SetDimensionX(v float32) {
	o.DimensionX = &v
}

// GetDimensionY returns the DimensionY field value if set, zero value otherwise.
func (o *ProductWriteLd) GetDimensionY() float32 {
	if o == nil || o.DimensionY == nil {
		var ret float32
		return ret
	}
	return *o.DimensionY
}

// GetDimensionYOk returns a tuple with the DimensionY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetDimensionYOk() (*float32, bool) {
	if o == nil || o.DimensionY == nil {
		return nil, false
	}
	return o.DimensionY, true
}

// HasDimensionY returns a boolean if a field has been set.
func (o *ProductWriteLd) HasDimensionY() bool {
	if o != nil && o.DimensionY != nil {
		return true
	}

	return false
}

// SetDimensionY gets a reference to the given float32 and assigns it to the DimensionY field.
func (o *ProductWriteLd) SetDimensionY(v float32) {
	o.DimensionY = &v
}

// GetDimensionZ returns the DimensionZ field value if set, zero value otherwise.
func (o *ProductWriteLd) GetDimensionZ() float32 {
	if o == nil || o.DimensionZ == nil {
		var ret float32
		return ret
	}
	return *o.DimensionZ
}

// GetDimensionZOk returns a tuple with the DimensionZ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetDimensionZOk() (*float32, bool) {
	if o == nil || o.DimensionZ == nil {
		return nil, false
	}
	return o.DimensionZ, true
}

// HasDimensionZ returns a boolean if a field has been set.
func (o *ProductWriteLd) HasDimensionZ() bool {
	if o != nil && o.DimensionZ != nil {
		return true
	}

	return false
}

// SetDimensionZ gets a reference to the given float32 and assigns it to the DimensionZ field.
func (o *ProductWriteLd) SetDimensionZ(v float32) {
	o.DimensionZ = &v
}

// GetHsCode returns the HsCode field value if set, zero value otherwise.
func (o *ProductWriteLd) GetHsCode() string {
	if o == nil || o.HsCode == nil {
		var ret string
		return ret
	}
	return *o.HsCode
}

// GetHsCodeOk returns a tuple with the HsCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetHsCodeOk() (*string, bool) {
	if o == nil || o.HsCode == nil {
		return nil, false
	}
	return o.HsCode, true
}

// HasHsCode returns a boolean if a field has been set.
func (o *ProductWriteLd) HasHsCode() bool {
	if o != nil && o.HsCode != nil {
		return true
	}

	return false
}

// SetHsCode gets a reference to the given string and assigns it to the HsCode field.
func (o *ProductWriteLd) SetHsCode(v string) {
	o.HsCode = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ProductWriteLd) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ProductWriteLd) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ProductWriteLd) SetImage(v string) {
	o.Image = &v
}

// GetName returns the Name field value
func (o *ProductWriteLd) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProductWriteLd) SetName(v string) {
	o.Name = v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *ProductWriteLd) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *ProductWriteLd) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *ProductWriteLd) SetReference(v string) {
	o.Reference = &v
}

// GetSellingPrice returns the SellingPrice field value if set, zero value otherwise.
func (o *ProductWriteLd) GetSellingPrice() float32 {
	if o == nil || o.SellingPrice == nil {
		var ret float32
		return ret
	}
	return *o.SellingPrice
}

// GetSellingPriceOk returns a tuple with the SellingPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetSellingPriceOk() (*float32, bool) {
	if o == nil || o.SellingPrice == nil {
		return nil, false
	}
	return o.SellingPrice, true
}

// HasSellingPrice returns a boolean if a field has been set.
func (o *ProductWriteLd) HasSellingPrice() bool {
	if o != nil && o.SellingPrice != nil {
		return true
	}

	return false
}

// SetSellingPrice gets a reference to the given float32 and assigns it to the SellingPrice field.
func (o *ProductWriteLd) SetSellingPrice(v float32) {
	o.SellingPrice = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ProductWriteLd) GetWeight() float32 {
	if o == nil || o.Weight == nil {
		var ret float32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductWriteLd) GetWeightOk() (*float32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ProductWriteLd) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float32 and assigns it to the Weight field.
func (o *ProductWriteLd) SetWeight(v float32) {
	o.Weight = &v
}

func (o ProductWriteLd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdContext != nil {
		toSerialize["ld-context"] = o.LdContext
	}
	if o.LdId != nil {
		toSerialize["ld-id"] = o.LdId
	}
	if o.LdType != nil {
		toSerialize["ld-type"] = o.LdType
	}
	if true {
		toSerialize["barcode"] = o.Barcode
	}
	if o.ChannelReference != nil {
		toSerialize["channelReference"] = o.ChannelReference
	}
	if o.CostPrice != nil {
		toSerialize["costPrice"] = o.CostPrice
	}
	if o.DimensionX != nil {
		toSerialize["dimensionX"] = o.DimensionX
	}
	if o.DimensionY != nil {
		toSerialize["dimensionY"] = o.DimensionY
	}
	if o.DimensionZ != nil {
		toSerialize["dimensionZ"] = o.DimensionZ
	}
	if o.HsCode != nil {
		toSerialize["hsCode"] = o.HsCode
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.SellingPrice != nil {
		toSerialize["sellingPrice"] = o.SellingPrice
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullableProductWriteLd struct {
	value *ProductWriteLd
	isSet bool
}

func (v NullableProductWriteLd) Get() *ProductWriteLd {
	return v.value
}

func (v *NullableProductWriteLd) Set(val *ProductWriteLd) {
	v.value = val
	v.isSet = true
}

func (v NullableProductWriteLd) IsSet() bool {
	return v.isSet
}

func (v *NullableProductWriteLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductWriteLd(val *ProductWriteLd) *NullableProductWriteLd {
	return &NullableProductWriteLd{value: val, isSet: true}
}

func (v NullableProductWriteLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductWriteLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
