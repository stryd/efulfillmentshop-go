/*
 * E-fulfilment Shop API
 *
 * The E-fulfilment Shop API allows you to integrate your service with our warehouse.
 *
 * API version: 1.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfillment_go

import (
	"encoding/json"
)

// SaleLineWrite Sale Line entity
type SaleLineWrite struct {
	// The sale line description
	Description string `json:"description"`
	// The product ID
	ProductId int32 `json:"productId"`
	// The sale line quantity
	Quantity int32 `json:"quantity"`
	// The sale ID
	SaleId int32 `json:"saleId"`
}

// NewSaleLineWrite instantiates a new SaleLineWrite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaleLineWrite(description string, productId int32, quantity int32, saleId int32, ) *SaleLineWrite {
	this := SaleLineWrite{}
	this.Description = description
	this.ProductId = productId
	this.Quantity = quantity
	this.SaleId = saleId
	return &this
}

// NewSaleLineWriteWithDefaults instantiates a new SaleLineWrite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaleLineWriteWithDefaults() *SaleLineWrite {
	this := SaleLineWrite{}
	return &this
}

// GetDescription returns the Description field value
func (o *SaleLineWrite) GetDescription() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SaleLineWrite) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SaleLineWrite) SetDescription(v string) {
	o.Description = v
}

// GetProductId returns the ProductId field value
func (o *SaleLineWrite) GetProductId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *SaleLineWrite) GetProductIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *SaleLineWrite) SetProductId(v int32) {
	o.ProductId = v
}

// GetQuantity returns the Quantity field value
func (o *SaleLineWrite) GetQuantity() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *SaleLineWrite) GetQuantityOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *SaleLineWrite) SetQuantity(v int32) {
	o.Quantity = v
}

// GetSaleId returns the SaleId field value
func (o *SaleLineWrite) GetSaleId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SaleId
}

// GetSaleIdOk returns a tuple with the SaleId field value
// and a boolean to check if the value has been set.
func (o *SaleLineWrite) GetSaleIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SaleId, true
}

// SetSaleId sets field value
func (o *SaleLineWrite) SetSaleId(v int32) {
	o.SaleId = v
}

func (o SaleLineWrite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["productId"] = o.ProductId
	}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	if true {
		toSerialize["saleId"] = o.SaleId
	}
	return json.Marshal(toSerialize)
}

type NullableSaleLineWrite struct {
	value *SaleLineWrite
	isSet bool
}

func (v NullableSaleLineWrite) Get() *SaleLineWrite {
	return v.value
}

func (v *NullableSaleLineWrite) Set(val *SaleLineWrite) {
	v.value = val
	v.isSet = true
}

func (v NullableSaleLineWrite) IsSet() bool {
	return v.isSet
}

func (v *NullableSaleLineWrite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaleLineWrite(val *SaleLineWrite) *NullableSaleLineWrite {
	return &NullableSaleLineWrite{value: val, isSet: true}
}

func (v NullableSaleLineWrite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaleLineWrite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


