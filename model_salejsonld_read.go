/*
 * E-fulfilment Shop API
 *
 * The E-fulfilment Shop API allows you to integrate your service with our warehouse.
 *
 * API version: 1.3.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
)

// SalejsonldRead Sale entity
type SalejsonldRead struct {
	JsonContext *string `json:"json_context,omitempty"`
	JsonId *string `json:"json_id,omitempty"`
	JsonType *string `json:"json_type,omitempty"`
	// The sale carrier ID
	CarrierId *int32 `json:"carrierId,omitempty"`
	// The sale ID
	Id *int32 `json:"id,omitempty"`
	// The sale invoice address ID
	InvoiceAddressId int32 `json:"invoiceAddressId"`
	// The sale line IDs
	LineIds *[]int32 `json:"lineIds,omitempty"`
	// The sale name
	Name *string `json:"name,omitempty"`
	// The sale shipment IDs
	ShipmentIds *[]int32 `json:"shipmentIds,omitempty"`
	// The sale shipping address ID
	ShippingAddressId int32 `json:"shippingAddressId"`
	// The sale warehouse status
	Status *string `json:"status,omitempty"`
}

// NewSalejsonldRead instantiates a new SalejsonldRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalejsonldRead(invoiceAddressId int32, shippingAddressId int32, ) *SalejsonldRead {
	this := SalejsonldRead{}
	this.InvoiceAddressId = invoiceAddressId
	this.ShippingAddressId = shippingAddressId
	return &this
}

// NewSalejsonldReadWithDefaults instantiates a new SalejsonldRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalejsonldReadWithDefaults() *SalejsonldRead {
	this := SalejsonldRead{}
	return &this
}

// GetJsonContext returns the JsonContext field value if set, zero value otherwise.
func (o *SalejsonldRead) GetJsonContext() string {
	if o == nil || o.JsonContext == nil {
		var ret string
		return ret
	}
	return *o.JsonContext
}

// GetJsonContextOk returns a tuple with the JsonContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetJsonContextOk() (*string, bool) {
	if o == nil || o.JsonContext == nil {
		return nil, false
	}
	return o.JsonContext, true
}

// HasJsonContext returns a boolean if a field has been set.
func (o *SalejsonldRead) HasJsonContext() bool {
	if o != nil && o.JsonContext != nil {
		return true
	}

	return false
}

// SetJsonContext gets a reference to the given string and assigns it to the JsonContext field.
func (o *SalejsonldRead) SetJsonContext(v string) {
	o.JsonContext = &v
}

// GetJsonId returns the JsonId field value if set, zero value otherwise.
func (o *SalejsonldRead) GetJsonId() string {
	if o == nil || o.JsonId == nil {
		var ret string
		return ret
	}
	return *o.JsonId
}

// GetJsonIdOk returns a tuple with the JsonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetJsonIdOk() (*string, bool) {
	if o == nil || o.JsonId == nil {
		return nil, false
	}
	return o.JsonId, true
}

// HasJsonId returns a boolean if a field has been set.
func (o *SalejsonldRead) HasJsonId() bool {
	if o != nil && o.JsonId != nil {
		return true
	}

	return false
}

// SetJsonId gets a reference to the given string and assigns it to the JsonId field.
func (o *SalejsonldRead) SetJsonId(v string) {
	o.JsonId = &v
}

// GetJsonType returns the JsonType field value if set, zero value otherwise.
func (o *SalejsonldRead) GetJsonType() string {
	if o == nil || o.JsonType == nil {
		var ret string
		return ret
	}
	return *o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetJsonTypeOk() (*string, bool) {
	if o == nil || o.JsonType == nil {
		return nil, false
	}
	return o.JsonType, true
}

// HasJsonType returns a boolean if a field has been set.
func (o *SalejsonldRead) HasJsonType() bool {
	if o != nil && o.JsonType != nil {
		return true
	}

	return false
}

// SetJsonType gets a reference to the given string and assigns it to the JsonType field.
func (o *SalejsonldRead) SetJsonType(v string) {
	o.JsonType = &v
}

// GetCarrierId returns the CarrierId field value if set, zero value otherwise.
func (o *SalejsonldRead) GetCarrierId() int32 {
	if o == nil || o.CarrierId == nil {
		var ret int32
		return ret
	}
	return *o.CarrierId
}

// GetCarrierIdOk returns a tuple with the CarrierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetCarrierIdOk() (*int32, bool) {
	if o == nil || o.CarrierId == nil {
		return nil, false
	}
	return o.CarrierId, true
}

// HasCarrierId returns a boolean if a field has been set.
func (o *SalejsonldRead) HasCarrierId() bool {
	if o != nil && o.CarrierId != nil {
		return true
	}

	return false
}

// SetCarrierId gets a reference to the given int32 and assigns it to the CarrierId field.
func (o *SalejsonldRead) SetCarrierId(v int32) {
	o.CarrierId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SalejsonldRead) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SalejsonldRead) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SalejsonldRead) SetId(v int32) {
	o.Id = &v
}

// GetInvoiceAddressId returns the InvoiceAddressId field value
func (o *SalejsonldRead) GetInvoiceAddressId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.InvoiceAddressId
}

// GetInvoiceAddressIdOk returns a tuple with the InvoiceAddressId field value
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetInvoiceAddressIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InvoiceAddressId, true
}

// SetInvoiceAddressId sets field value
func (o *SalejsonldRead) SetInvoiceAddressId(v int32) {
	o.InvoiceAddressId = v
}

// GetLineIds returns the LineIds field value if set, zero value otherwise.
func (o *SalejsonldRead) GetLineIds() []int32 {
	if o == nil || o.LineIds == nil {
		var ret []int32
		return ret
	}
	return *o.LineIds
}

// GetLineIdsOk returns a tuple with the LineIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetLineIdsOk() (*[]int32, bool) {
	if o == nil || o.LineIds == nil {
		return nil, false
	}
	return o.LineIds, true
}

// HasLineIds returns a boolean if a field has been set.
func (o *SalejsonldRead) HasLineIds() bool {
	if o != nil && o.LineIds != nil {
		return true
	}

	return false
}

// SetLineIds gets a reference to the given []int32 and assigns it to the LineIds field.
func (o *SalejsonldRead) SetLineIds(v []int32) {
	o.LineIds = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SalejsonldRead) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SalejsonldRead) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SalejsonldRead) SetName(v string) {
	o.Name = &v
}

// GetShipmentIds returns the ShipmentIds field value if set, zero value otherwise.
func (o *SalejsonldRead) GetShipmentIds() []int32 {
	if o == nil || o.ShipmentIds == nil {
		var ret []int32
		return ret
	}
	return *o.ShipmentIds
}

// GetShipmentIdsOk returns a tuple with the ShipmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetShipmentIdsOk() (*[]int32, bool) {
	if o == nil || o.ShipmentIds == nil {
		return nil, false
	}
	return o.ShipmentIds, true
}

// HasShipmentIds returns a boolean if a field has been set.
func (o *SalejsonldRead) HasShipmentIds() bool {
	if o != nil && o.ShipmentIds != nil {
		return true
	}

	return false
}

// SetShipmentIds gets a reference to the given []int32 and assigns it to the ShipmentIds field.
func (o *SalejsonldRead) SetShipmentIds(v []int32) {
	o.ShipmentIds = &v
}

// GetShippingAddressId returns the ShippingAddressId field value
func (o *SalejsonldRead) GetShippingAddressId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ShippingAddressId
}

// GetShippingAddressIdOk returns a tuple with the ShippingAddressId field value
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetShippingAddressIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ShippingAddressId, true
}

// SetShippingAddressId sets field value
func (o *SalejsonldRead) SetShippingAddressId(v int32) {
	o.ShippingAddressId = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SalejsonldRead) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalejsonldRead) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SalejsonldRead) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SalejsonldRead) SetStatus(v string) {
	o.Status = &v
}

func (o SalejsonldRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JsonContext != nil {
		toSerialize["json_context"] = o.JsonContext
	}
	if o.JsonId != nil {
		toSerialize["json_id"] = o.JsonId
	}
	if o.JsonType != nil {
		toSerialize["json_type"] = o.JsonType
	}
	if o.CarrierId != nil {
		toSerialize["carrierId"] = o.CarrierId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["invoiceAddressId"] = o.InvoiceAddressId
	}
	if o.LineIds != nil {
		toSerialize["lineIds"] = o.LineIds
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ShipmentIds != nil {
		toSerialize["shipmentIds"] = o.ShipmentIds
	}
	if true {
		toSerialize["shippingAddressId"] = o.ShippingAddressId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableSalejsonldRead struct {
	value *SalejsonldRead
	isSet bool
}

func (v NullableSalejsonldRead) Get() *SalejsonldRead {
	return v.value
}

func (v *NullableSalejsonldRead) Set(val *SalejsonldRead) {
	v.value = val
	v.isSet = true
}

func (v NullableSalejsonldRead) IsSet() bool {
	return v.isSet
}

func (v *NullableSalejsonldRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalejsonldRead(val *SalejsonldRead) *NullableSalejsonldRead {
	return &NullableSalejsonldRead{value: val, isSet: true}
}

func (v NullableSalejsonldRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalejsonldRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


