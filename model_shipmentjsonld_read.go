/*
 * E-fulfilment Shop API
 *
 * The E-fulfilment Shop API allows you to integrate your service with our warehouse.
 *
 * API version: 1.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
	"time"
)

// ShipmentjsonldRead Shipment entity
type ShipmentjsonldRead struct {
	JSONContext *string `json:"@context,omitempty"`
	JSONId *string `json:"@id,omitempty"`
	JSONType *string `json:"@type,omitempty"`
	// The shipment carrier ID
	CarrierId *int32 `json:"carrierId,omitempty"`
	// The shipment ID
	Id *int32 `json:"id,omitempty"`
	// The sale ID
	SaleId *int32 `json:"saleId,omitempty"`
	// The shipment date
	ShippedAt *time.Time `json:"shippedAt,omitempty"`
	// The shipment tracking codes
	TrackingCodes *[]string `json:"trackingCodes,omitempty"`
}

// NewShipmentjsonldRead instantiates a new ShipmentjsonldRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentjsonldRead() *ShipmentjsonldRead {
	this := ShipmentjsonldRead{}
	return &this
}

// NewShipmentjsonldReadWithDefaults instantiates a new ShipmentjsonldRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentjsonldReadWithDefaults() *ShipmentjsonldRead {
	this := ShipmentjsonldRead{}
	return &this
}

// GetJSONContext returns the JSONContext field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetJSONContext() string {
	if o == nil || o.JSONContext == nil {
		var ret string
		return ret
	}
	return *o.JSONContext
}

// GetJSONContextOk returns a tuple with the JSONContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetJSONContextOk() (*string, bool) {
	if o == nil || o.JSONContext == nil {
		return nil, false
	}
	return o.JSONContext, true
}

// HasJSONContext returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasJSONContext() bool {
	if o != nil && o.JSONContext != nil {
		return true
	}

	return false
}

// SetJSONContext gets a reference to the given string and assigns it to the JSONContext field.
func (o *ShipmentjsonldRead) SetJSONContext(v string) {
	o.JSONContext = &v
}

// GetJSONId returns the JSONId field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetJSONId() string {
	if o == nil || o.JSONId == nil {
		var ret string
		return ret
	}
	return *o.JSONId
}

// GetJSONIdOk returns a tuple with the JSONId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetJSONIdOk() (*string, bool) {
	if o == nil || o.JSONId == nil {
		return nil, false
	}
	return o.JSONId, true
}

// HasJSONId returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasJSONId() bool {
	if o != nil && o.JSONId != nil {
		return true
	}

	return false
}

// SetJSONId gets a reference to the given string and assigns it to the JSONId field.
func (o *ShipmentjsonldRead) SetJSONId(v string) {
	o.JSONId = &v
}

// GetJSONType returns the JSONType field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetJSONType() string {
	if o == nil || o.JSONType == nil {
		var ret string
		return ret
	}
	return *o.JSONType
}

// GetJSONTypeOk returns a tuple with the JSONType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetJSONTypeOk() (*string, bool) {
	if o == nil || o.JSONType == nil {
		return nil, false
	}
	return o.JSONType, true
}

// HasJSONType returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasJSONType() bool {
	if o != nil && o.JSONType != nil {
		return true
	}

	return false
}

// SetJSONType gets a reference to the given string and assigns it to the JSONType field.
func (o *ShipmentjsonldRead) SetJSONType(v string) {
	o.JSONType = &v
}

// GetCarrierId returns the CarrierId field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetCarrierId() int32 {
	if o == nil || o.CarrierId == nil {
		var ret int32
		return ret
	}
	return *o.CarrierId
}

// GetCarrierIdOk returns a tuple with the CarrierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetCarrierIdOk() (*int32, bool) {
	if o == nil || o.CarrierId == nil {
		return nil, false
	}
	return o.CarrierId, true
}

// HasCarrierId returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasCarrierId() bool {
	if o != nil && o.CarrierId != nil {
		return true
	}

	return false
}

// SetCarrierId gets a reference to the given int32 and assigns it to the CarrierId field.
func (o *ShipmentjsonldRead) SetCarrierId(v int32) {
	o.CarrierId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ShipmentjsonldRead) SetId(v int32) {
	o.Id = &v
}

// GetSaleId returns the SaleId field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetSaleId() int32 {
	if o == nil || o.SaleId == nil {
		var ret int32
		return ret
	}
	return *o.SaleId
}

// GetSaleIdOk returns a tuple with the SaleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetSaleIdOk() (*int32, bool) {
	if o == nil || o.SaleId == nil {
		return nil, false
	}
	return o.SaleId, true
}

// HasSaleId returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasSaleId() bool {
	if o != nil && o.SaleId != nil {
		return true
	}

	return false
}

// SetSaleId gets a reference to the given int32 and assigns it to the SaleId field.
func (o *ShipmentjsonldRead) SetSaleId(v int32) {
	o.SaleId = &v
}

// GetShippedAt returns the ShippedAt field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetShippedAt() time.Time {
	if o == nil || o.ShippedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ShippedAt
}

// GetShippedAtOk returns a tuple with the ShippedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetShippedAtOk() (*time.Time, bool) {
	if o == nil || o.ShippedAt == nil {
		return nil, false
	}
	return o.ShippedAt, true
}

// HasShippedAt returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasShippedAt() bool {
	if o != nil && o.ShippedAt != nil {
		return true
	}

	return false
}

// SetShippedAt gets a reference to the given time.Time and assigns it to the ShippedAt field.
func (o *ShipmentjsonldRead) SetShippedAt(v time.Time) {
	o.ShippedAt = &v
}

// GetTrackingCodes returns the TrackingCodes field value if set, zero value otherwise.
func (o *ShipmentjsonldRead) GetTrackingCodes() []string {
	if o == nil || o.TrackingCodes == nil {
		var ret []string
		return ret
	}
	return *o.TrackingCodes
}

// GetTrackingCodesOk returns a tuple with the TrackingCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentjsonldRead) GetTrackingCodesOk() (*[]string, bool) {
	if o == nil || o.TrackingCodes == nil {
		return nil, false
	}
	return o.TrackingCodes, true
}

// HasTrackingCodes returns a boolean if a field has been set.
func (o *ShipmentjsonldRead) HasTrackingCodes() bool {
	if o != nil && o.TrackingCodes != nil {
		return true
	}

	return false
}

// SetTrackingCodes gets a reference to the given []string and assigns it to the TrackingCodes field.
func (o *ShipmentjsonldRead) SetTrackingCodes(v []string) {
	o.TrackingCodes = &v
}

func (o ShipmentjsonldRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JSONContext != nil {
		toSerialize["@context"] = o.JSONContext
	}
	if o.JSONId != nil {
		toSerialize["@id"] = o.JSONId
	}
	if o.JSONType != nil {
		toSerialize["@type"] = o.JSONType
	}
	if o.CarrierId != nil {
		toSerialize["carrierId"] = o.CarrierId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SaleId != nil {
		toSerialize["saleId"] = o.SaleId
	}
	if o.ShippedAt != nil {
		toSerialize["shippedAt"] = o.ShippedAt
	}
	if o.TrackingCodes != nil {
		toSerialize["trackingCodes"] = o.TrackingCodes
	}
	return json.Marshal(toSerialize)
}

type NullableShipmentjsonldRead struct {
	value *ShipmentjsonldRead
	isSet bool
}

func (v NullableShipmentjsonldRead) Get() *ShipmentjsonldRead {
	return v.value
}

func (v *NullableShipmentjsonldRead) Set(val *ShipmentjsonldRead) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentjsonldRead) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentjsonldRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentjsonldRead(val *ShipmentjsonldRead) *NullableShipmentjsonldRead {
	return &NullableShipmentjsonldRead{value: val, isSet: true}
}

func (v NullableShipmentjsonldRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentjsonldRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


