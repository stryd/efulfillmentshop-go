/*
E-fulfilment Shop API

The E-fulfilment Shop API allows you to integrate your service with our warehouse.

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
	"time"
)

// ShipmentReadLd Shipment entity
type ShipmentReadLd struct {
	LdContext *string `json:"@context,omitempty"`
	LdId      *string `json:"@id,omitempty"`
	LdType    *string `json:"@type,omitempty"`
	// The shipment carrier ID
	CarrierId *int32 `json:"carrierId,omitempty"`
	// The shipment ID
	Id *int32 `json:"id,omitempty"`
	// The sale ID
	SaleId int32 `json:"saleId"`
	// The shipment date
	ShippedAt CustomTime `json:"shippedAt"`
	// The shipment tracking codes
	TrackingCodes *[]string `json:"trackingCodes,omitempty"`
}

// NewShipmentReadLd instantiates a new ShipmentReadLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentReadLd(saleId int32, shippedAt time.Time) *ShipmentReadLd {
	this := ShipmentReadLd{}
	this.SaleId = saleId
	this.ShippedAt = CustomTime{shippedAt}
	return &this
}

// NewShipmentReadLdWithDefaults instantiates a new ShipmentReadLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentReadLdWithDefaults() *ShipmentReadLd {
	this := ShipmentReadLd{}
	return &this
}

// GetLdContext returns the LdContext field value if set, zero value otherwise.
func (o *ShipmentReadLd) GetLdContext() string {
	if o == nil || o.LdContext == nil {
		var ret string
		return ret
	}
	return *o.LdContext
}

// GetLdContextOk returns a tuple with the LdContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetLdContextOk() (*string, bool) {
	if o == nil || o.LdContext == nil {
		return nil, false
	}
	return o.LdContext, true
}

// HasLdContext returns a boolean if a field has been set.
func (o *ShipmentReadLd) HasLdContext() bool {
	if o != nil && o.LdContext != nil {
		return true
	}

	return false
}

// SetLdContext gets a reference to the given string and assigns it to the LdContext field.
func (o *ShipmentReadLd) SetLdContext(v string) {
	o.LdContext = &v
}

// GetLdId returns the LdId field value if set, zero value otherwise.
func (o *ShipmentReadLd) GetLdId() string {
	if o == nil || o.LdId == nil {
		var ret string
		return ret
	}
	return *o.LdId
}

// GetLdIdOk returns a tuple with the LdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetLdIdOk() (*string, bool) {
	if o == nil || o.LdId == nil {
		return nil, false
	}
	return o.LdId, true
}

// HasLdId returns a boolean if a field has been set.
func (o *ShipmentReadLd) HasLdId() bool {
	if o != nil && o.LdId != nil {
		return true
	}

	return false
}

// SetLdId gets a reference to the given string and assigns it to the LdId field.
func (o *ShipmentReadLd) SetLdId(v string) {
	o.LdId = &v
}

// GetLdType returns the LdType field value if set, zero value otherwise.
func (o *ShipmentReadLd) GetLdType() string {
	if o == nil || o.LdType == nil {
		var ret string
		return ret
	}
	return *o.LdType
}

// GetLdTypeOk returns a tuple with the LdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetLdTypeOk() (*string, bool) {
	if o == nil || o.LdType == nil {
		return nil, false
	}
	return o.LdType, true
}

// HasLdType returns a boolean if a field has been set.
func (o *ShipmentReadLd) HasLdType() bool {
	if o != nil && o.LdType != nil {
		return true
	}

	return false
}

// SetLdType gets a reference to the given string and assigns it to the LdType field.
func (o *ShipmentReadLd) SetLdType(v string) {
	o.LdType = &v
}

// GetCarrierId returns the CarrierId field value if set, zero value otherwise.
func (o *ShipmentReadLd) GetCarrierId() int32 {
	if o == nil || o.CarrierId == nil {
		var ret int32
		return ret
	}
	return *o.CarrierId
}

// GetCarrierIdOk returns a tuple with the CarrierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetCarrierIdOk() (*int32, bool) {
	if o == nil || o.CarrierId == nil {
		return nil, false
	}
	return o.CarrierId, true
}

// HasCarrierId returns a boolean if a field has been set.
func (o *ShipmentReadLd) HasCarrierId() bool {
	if o != nil && o.CarrierId != nil {
		return true
	}

	return false
}

// SetCarrierId gets a reference to the given int32 and assigns it to the CarrierId field.
func (o *ShipmentReadLd) SetCarrierId(v int32) {
	o.CarrierId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ShipmentReadLd) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ShipmentReadLd) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ShipmentReadLd) SetId(v int32) {
	o.Id = &v
}

// GetSaleId returns the SaleId field value
func (o *ShipmentReadLd) GetSaleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SaleId
}

// GetSaleIdOk returns a tuple with the SaleId field value
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetSaleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaleId, true
}

// SetSaleId sets field value
func (o *ShipmentReadLd) SetSaleId(v int32) {
	o.SaleId = v
}

// GetShippedAt returns the ShippedAt field value
func (o *ShipmentReadLd) GetShippedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ShippedAt.Time
}

// GetShippedAtOk returns a tuple with the ShippedAt field value
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetShippedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippedAt.Time, true
}

// SetShippedAt sets field value
func (o *ShipmentReadLd) SetShippedAt(v time.Time) {
	o.ShippedAt = CustomTime{v}
}

// GetTrackingCodes returns the TrackingCodes field value if set, zero value otherwise.
func (o *ShipmentReadLd) GetTrackingCodes() []string {
	if o == nil || o.TrackingCodes == nil {
		var ret []string
		return ret
	}
	return *o.TrackingCodes
}

// GetTrackingCodesOk returns a tuple with the TrackingCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReadLd) GetTrackingCodesOk() (*[]string, bool) {
	if o == nil || o.TrackingCodes == nil {
		return nil, false
	}
	return o.TrackingCodes, true
}

// HasTrackingCodes returns a boolean if a field has been set.
func (o *ShipmentReadLd) HasTrackingCodes() bool {
	if o != nil && o.TrackingCodes != nil {
		return true
	}

	return false
}

// SetTrackingCodes gets a reference to the given []string and assigns it to the TrackingCodes field.
func (o *ShipmentReadLd) SetTrackingCodes(v []string) {
	o.TrackingCodes = &v
}

func (o ShipmentReadLd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdContext != nil {
		toSerialize["ld-context"] = o.LdContext
	}
	if o.LdId != nil {
		toSerialize["ld-id"] = o.LdId
	}
	if o.LdType != nil {
		toSerialize["ld-type"] = o.LdType
	}
	if o.CarrierId != nil {
		toSerialize["carrierId"] = o.CarrierId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["saleId"] = o.SaleId
	}
	if true {
		toSerialize["shippedAt"] = o.ShippedAt
	}
	if o.TrackingCodes != nil {
		toSerialize["trackingCodes"] = o.TrackingCodes
	}
	return json.Marshal(toSerialize)
}

type NullableShipmentReadLd struct {
	value *ShipmentReadLd
	isSet bool
}

func (v NullableShipmentReadLd) Get() *ShipmentReadLd {
	return v.value
}

func (v *NullableShipmentReadLd) Set(val *ShipmentReadLd) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentReadLd) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentReadLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentReadLd(val *ShipmentReadLd) *NullableShipmentReadLd {
	return &NullableShipmentReadLd{value: val, isSet: true}
}

func (v NullableShipmentReadLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentReadLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
