/*
E-fulfilment Shop API

The E-fulfilment Shop API allows you to integrate your service with our warehouse.

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
	"time"
)

// PurchaseLineReadLd Purchase Line entity
type PurchaseLineReadLd struct {
	LdContext *string `json:"@context,omitempty"`
	LdId      *string `json:"@id,omitempty"`
	LdType    *string `json:"@type,omitempty"`
	// The purchase line description
	Description string `json:"description"`
	// The purchase line ID
	Id *int32 `json:"id,omitempty"`
	// The purchase line planned delivery date
	PlannedDate *CustomTime `json:"plannedDate,omitempty"`
	// The product ID
	ProductId int32 `json:"productId"`
	// The purchase ID
	PurchaseId int32 `json:"purchaseId"`
	// The purchase line quantity received
	QtyReceived *int32 `json:"qtyReceived,omitempty"`
	// The purchase line quantity
	Quantity int32 `json:"quantity"`
}

// NewPurchaseLineReadLd instantiates a new PurchaseLineReadLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseLineReadLd(description string, productId int32, purchaseId int32, quantity int32) *PurchaseLineReadLd {
	this := PurchaseLineReadLd{}
	this.Description = description
	this.ProductId = productId
	this.PurchaseId = purchaseId
	this.Quantity = quantity
	return &this
}

// NewPurchaseLineReadLdWithDefaults instantiates a new PurchaseLineReadLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseLineReadLdWithDefaults() *PurchaseLineReadLd {
	this := PurchaseLineReadLd{}
	return &this
}

// GetLdContext returns the LdContext field value if set, zero value otherwise.
func (o *PurchaseLineReadLd) GetLdContext() string {
	if o == nil || o.LdContext == nil {
		var ret string
		return ret
	}
	return *o.LdContext
}

// GetLdContextOk returns a tuple with the LdContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetLdContextOk() (*string, bool) {
	if o == nil || o.LdContext == nil {
		return nil, false
	}
	return o.LdContext, true
}

// HasLdContext returns a boolean if a field has been set.
func (o *PurchaseLineReadLd) HasLdContext() bool {
	if o != nil && o.LdContext != nil {
		return true
	}

	return false
}

// SetLdContext gets a reference to the given string and assigns it to the LdContext field.
func (o *PurchaseLineReadLd) SetLdContext(v string) {
	o.LdContext = &v
}

// GetLdId returns the LdId field value if set, zero value otherwise.
func (o *PurchaseLineReadLd) GetLdId() string {
	if o == nil || o.LdId == nil {
		var ret string
		return ret
	}
	return *o.LdId
}

// GetLdIdOk returns a tuple with the LdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetLdIdOk() (*string, bool) {
	if o == nil || o.LdId == nil {
		return nil, false
	}
	return o.LdId, true
}

// HasLdId returns a boolean if a field has been set.
func (o *PurchaseLineReadLd) HasLdId() bool {
	if o != nil && o.LdId != nil {
		return true
	}

	return false
}

// SetLdId gets a reference to the given string and assigns it to the LdId field.
func (o *PurchaseLineReadLd) SetLdId(v string) {
	o.LdId = &v
}

// GetLdType returns the LdType field value if set, zero value otherwise.
func (o *PurchaseLineReadLd) GetLdType() string {
	if o == nil || o.LdType == nil {
		var ret string
		return ret
	}
	return *o.LdType
}

// GetLdTypeOk returns a tuple with the LdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetLdTypeOk() (*string, bool) {
	if o == nil || o.LdType == nil {
		return nil, false
	}
	return o.LdType, true
}

// HasLdType returns a boolean if a field has been set.
func (o *PurchaseLineReadLd) HasLdType() bool {
	if o != nil && o.LdType != nil {
		return true
	}

	return false
}

// SetLdType gets a reference to the given string and assigns it to the LdType field.
func (o *PurchaseLineReadLd) SetLdType(v string) {
	o.LdType = &v
}

// GetDescription returns the Description field value
func (o *PurchaseLineReadLd) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PurchaseLineReadLd) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PurchaseLineReadLd) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PurchaseLineReadLd) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PurchaseLineReadLd) SetId(v int32) {
	o.Id = &v
}

// GetPlannedDate returns the PlannedDate field value if set, zero value otherwise.
func (o *PurchaseLineReadLd) GetPlannedDate() time.Time {
	if o == nil || o.PlannedDate == nil {
		var ret time.Time
		return ret
	}
	return o.PlannedDate.Time
}

// GetPlannedDateOk returns a tuple with the PlannedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetPlannedDateOk() (*time.Time, bool) {
	if o == nil || o.PlannedDate == nil {
		return nil, false
	}
	return &o.PlannedDate.Time, true
}

// HasPlannedDate returns a boolean if a field has been set.
func (o *PurchaseLineReadLd) HasPlannedDate() bool {
	if o != nil && o.PlannedDate != nil {
		return true
	}

	return false
}

// SetPlannedDate gets a reference to the given time.Time and assigns it to the PlannedDate field.
func (o *PurchaseLineReadLd) SetPlannedDate(v time.Time) {
	o.PlannedDate = &CustomTime{v}
}

// GetProductId returns the ProductId field value
func (o *PurchaseLineReadLd) GetProductId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetProductIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *PurchaseLineReadLd) SetProductId(v int32) {
	o.ProductId = v
}

// GetPurchaseId returns the PurchaseId field value
func (o *PurchaseLineReadLd) GetPurchaseId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PurchaseId
}

// GetPurchaseIdOk returns a tuple with the PurchaseId field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetPurchaseIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchaseId, true
}

// SetPurchaseId sets field value
func (o *PurchaseLineReadLd) SetPurchaseId(v int32) {
	o.PurchaseId = v
}

// GetQtyReceived returns the QtyReceived field value if set, zero value otherwise.
func (o *PurchaseLineReadLd) GetQtyReceived() int32 {
	if o == nil || o.QtyReceived == nil {
		var ret int32
		return ret
	}
	return *o.QtyReceived
}

// GetQtyReceivedOk returns a tuple with the QtyReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetQtyReceivedOk() (*int32, bool) {
	if o == nil || o.QtyReceived == nil {
		return nil, false
	}
	return o.QtyReceived, true
}

// HasQtyReceived returns a boolean if a field has been set.
func (o *PurchaseLineReadLd) HasQtyReceived() bool {
	if o != nil && o.QtyReceived != nil {
		return true
	}

	return false
}

// SetQtyReceived gets a reference to the given int32 and assigns it to the QtyReceived field.
func (o *PurchaseLineReadLd) SetQtyReceived(v int32) {
	o.QtyReceived = &v
}

// GetQuantity returns the Quantity field value
func (o *PurchaseLineReadLd) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *PurchaseLineReadLd) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *PurchaseLineReadLd) SetQuantity(v int32) {
	o.Quantity = v
}

func (o PurchaseLineReadLd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdContext != nil {
		toSerialize["ld-context"] = o.LdContext
	}
	if o.LdId != nil {
		toSerialize["ld-id"] = o.LdId
	}
	if o.LdType != nil {
		toSerialize["ld-type"] = o.LdType
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PlannedDate != nil {
		toSerialize["plannedDate"] = o.PlannedDate
	}
	if true {
		toSerialize["productId"] = o.ProductId
	}
	if true {
		toSerialize["purchaseId"] = o.PurchaseId
	}
	if o.QtyReceived != nil {
		toSerialize["qtyReceived"] = o.QtyReceived
	}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullablePurchaseLineReadLd struct {
	value *PurchaseLineReadLd
	isSet bool
}

func (v NullablePurchaseLineReadLd) Get() *PurchaseLineReadLd {
	return v.value
}

func (v *NullablePurchaseLineReadLd) Set(val *PurchaseLineReadLd) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseLineReadLd) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseLineReadLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseLineReadLd(val *PurchaseLineReadLd) *NullablePurchaseLineReadLd {
	return &NullablePurchaseLineReadLd{value: val, isSet: true}
}

func (v NullablePurchaseLineReadLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseLineReadLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
