/*
E-fulfilment Shop API

The E-fulfilment Shop API allows you to integrate your service with our warehouse.

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
)

// SaleWriteLd Sale entity
type SaleWriteLd struct {
	LdContext *string `json:"@context,omitempty"`
	LdId      *string `json:"@id,omitempty"`
	LdType    *string `json:"@type,omitempty"`
	// The sale carrier ID
	CarrierId *int32 `json:"carrierId,omitempty"`
	// The sale channel reference (DEPRECATED)
	ChannelReference *string `json:"channelReference,omitempty"`
	// The sale invoice address ID
	InvoiceAddressId int32 `json:"invoiceAddressId"`
	// Your sale reference (This could be your sale ID)
	Reference *string `json:"reference,omitempty"`
	// The sale shipping address ID
	ShippingAddressId int32 `json:"shippingAddressId"`
	// The sale type
	Type *string `json:"type,omitempty"`
}

// NewSaleWriteLd instantiates a new SaleWriteLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaleWriteLd(invoiceAddressId int32, shippingAddressId int32) *SaleWriteLd {
	this := SaleWriteLd{}
	this.InvoiceAddressId = invoiceAddressId
	this.ShippingAddressId = shippingAddressId
	return &this
}

// NewSaleWriteLdWithDefaults instantiates a new SaleWriteLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaleWriteLdWithDefaults() *SaleWriteLd {
	this := SaleWriteLd{}
	return &this
}

// GetLdContext returns the LdContext field value if set, zero value otherwise.
func (o *SaleWriteLd) GetLdContext() string {
	if o == nil || o.LdContext == nil {
		var ret string
		return ret
	}
	return *o.LdContext
}

// GetLdContextOk returns a tuple with the LdContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetLdContextOk() (*string, bool) {
	if o == nil || o.LdContext == nil {
		return nil, false
	}
	return o.LdContext, true
}

// HasLdContext returns a boolean if a field has been set.
func (o *SaleWriteLd) HasLdContext() bool {
	if o != nil && o.LdContext != nil {
		return true
	}

	return false
}

// SetLdContext gets a reference to the given string and assigns it to the LdContext field.
func (o *SaleWriteLd) SetLdContext(v string) {
	o.LdContext = &v
}

// GetLdId returns the LdId field value if set, zero value otherwise.
func (o *SaleWriteLd) GetLdId() string {
	if o == nil || o.LdId == nil {
		var ret string
		return ret
	}
	return *o.LdId
}

// GetLdIdOk returns a tuple with the LdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetLdIdOk() (*string, bool) {
	if o == nil || o.LdId == nil {
		return nil, false
	}
	return o.LdId, true
}

// HasLdId returns a boolean if a field has been set.
func (o *SaleWriteLd) HasLdId() bool {
	if o != nil && o.LdId != nil {
		return true
	}

	return false
}

// SetLdId gets a reference to the given string and assigns it to the LdId field.
func (o *SaleWriteLd) SetLdId(v string) {
	o.LdId = &v
}

// GetLdType returns the LdType field value if set, zero value otherwise.
func (o *SaleWriteLd) GetLdType() string {
	if o == nil || o.LdType == nil {
		var ret string
		return ret
	}
	return *o.LdType
}

// GetLdTypeOk returns a tuple with the LdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetLdTypeOk() (*string, bool) {
	if o == nil || o.LdType == nil {
		return nil, false
	}
	return o.LdType, true
}

// HasLdType returns a boolean if a field has been set.
func (o *SaleWriteLd) HasLdType() bool {
	if o != nil && o.LdType != nil {
		return true
	}

	return false
}

// SetLdType gets a reference to the given string and assigns it to the LdType field.
func (o *SaleWriteLd) SetLdType(v string) {
	o.LdType = &v
}

// GetCarrierId returns the CarrierId field value if set, zero value otherwise.
func (o *SaleWriteLd) GetCarrierId() int32 {
	if o == nil || o.CarrierId == nil {
		var ret int32
		return ret
	}
	return *o.CarrierId
}

// GetCarrierIdOk returns a tuple with the CarrierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetCarrierIdOk() (*int32, bool) {
	if o == nil || o.CarrierId == nil {
		return nil, false
	}
	return o.CarrierId, true
}

// HasCarrierId returns a boolean if a field has been set.
func (o *SaleWriteLd) HasCarrierId() bool {
	if o != nil && o.CarrierId != nil {
		return true
	}

	return false
}

// SetCarrierId gets a reference to the given int32 and assigns it to the CarrierId field.
func (o *SaleWriteLd) SetCarrierId(v int32) {
	o.CarrierId = &v
}

// GetChannelReference returns the ChannelReference field value if set, zero value otherwise.
func (o *SaleWriteLd) GetChannelReference() string {
	if o == nil || o.ChannelReference == nil {
		var ret string
		return ret
	}
	return *o.ChannelReference
}

// GetChannelReferenceOk returns a tuple with the ChannelReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetChannelReferenceOk() (*string, bool) {
	if o == nil || o.ChannelReference == nil {
		return nil, false
	}
	return o.ChannelReference, true
}

// HasChannelReference returns a boolean if a field has been set.
func (o *SaleWriteLd) HasChannelReference() bool {
	if o != nil && o.ChannelReference != nil {
		return true
	}

	return false
}

// SetChannelReference gets a reference to the given string and assigns it to the ChannelReference field.
func (o *SaleWriteLd) SetChannelReference(v string) {
	o.ChannelReference = &v
}

// GetInvoiceAddressId returns the InvoiceAddressId field value
func (o *SaleWriteLd) GetInvoiceAddressId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InvoiceAddressId
}

// GetInvoiceAddressIdOk returns a tuple with the InvoiceAddressId field value
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetInvoiceAddressIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceAddressId, true
}

// SetInvoiceAddressId sets field value
func (o *SaleWriteLd) SetInvoiceAddressId(v int32) {
	o.InvoiceAddressId = v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *SaleWriteLd) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *SaleWriteLd) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *SaleWriteLd) SetReference(v string) {
	o.Reference = &v
}

// GetShippingAddressId returns the ShippingAddressId field value
func (o *SaleWriteLd) GetShippingAddressId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ShippingAddressId
}

// GetShippingAddressIdOk returns a tuple with the ShippingAddressId field value
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetShippingAddressIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingAddressId, true
}

// SetShippingAddressId sets field value
func (o *SaleWriteLd) SetShippingAddressId(v int32) {
	o.ShippingAddressId = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SaleWriteLd) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaleWriteLd) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SaleWriteLd) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SaleWriteLd) SetType(v string) {
	o.Type = &v
}

func (o SaleWriteLd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdContext != nil {
		toSerialize["ld-context"] = o.LdContext
	}
	if o.LdId != nil {
		toSerialize["ld-id"] = o.LdId
	}
	if o.LdType != nil {
		toSerialize["ld-type"] = o.LdType
	}
	if o.CarrierId != nil {
		toSerialize["carrierId"] = o.CarrierId
	}
	if o.ChannelReference != nil {
		toSerialize["channelReference"] = o.ChannelReference
	}
	if true {
		toSerialize["invoiceAddressId"] = o.InvoiceAddressId
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if true {
		toSerialize["shippingAddressId"] = o.ShippingAddressId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSaleWriteLd struct {
	value *SaleWriteLd
	isSet bool
}

func (v NullableSaleWriteLd) Get() *SaleWriteLd {
	return v.value
}

func (v *NullableSaleWriteLd) Set(val *SaleWriteLd) {
	v.value = val
	v.isSet = true
}

func (v NullableSaleWriteLd) IsSet() bool {
	return v.isSet
}

func (v *NullableSaleWriteLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaleWriteLd(val *SaleWriteLd) *NullableSaleWriteLd {
	return &NullableSaleWriteLd{value: val, isSet: true}
}

func (v NullableSaleWriteLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaleWriteLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
