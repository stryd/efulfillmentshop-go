/*
E-fulfilment Shop API

The E-fulfilment Shop API allows you to integrate your service with our warehouse.

API version: 1.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package efulfilmentshop

import (
	"encoding/json"
)

// UserAuthenticateLd struct for UserAuthenticateLd
type UserAuthenticateLd struct {
	LdContext *string `json:"@context,omitempty"`
	LdId      *string `json:"@id,omitempty"`
	LdType    *string `json:"@type,omitempty"`
	// The user email address
	Email string `json:"email"`
	// The user password
	Password string `json:"password"`
}

// NewUserAuthenticateLd instantiates a new UserAuthenticateLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAuthenticateLd(email string, password string) *UserAuthenticateLd {
	this := UserAuthenticateLd{}
	this.Email = email
	this.Password = password
	return &this
}

// NewUserAuthenticateLdWithDefaults instantiates a new UserAuthenticateLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAuthenticateLdWithDefaults() *UserAuthenticateLd {
	this := UserAuthenticateLd{}
	return &this
}

// GetLdContext returns the LdContext field value if set, zero value otherwise.
func (o *UserAuthenticateLd) GetLdContext() string {
	if o == nil || o.LdContext == nil {
		var ret string
		return ret
	}
	return *o.LdContext
}

// GetLdContextOk returns a tuple with the LdContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthenticateLd) GetLdContextOk() (*string, bool) {
	if o == nil || o.LdContext == nil {
		return nil, false
	}
	return o.LdContext, true
}

// HasLdContext returns a boolean if a field has been set.
func (o *UserAuthenticateLd) HasLdContext() bool {
	if o != nil && o.LdContext != nil {
		return true
	}

	return false
}

// SetLdContext gets a reference to the given string and assigns it to the LdContext field.
func (o *UserAuthenticateLd) SetLdContext(v string) {
	o.LdContext = &v
}

// GetLdId returns the LdId field value if set, zero value otherwise.
func (o *UserAuthenticateLd) GetLdId() string {
	if o == nil || o.LdId == nil {
		var ret string
		return ret
	}
	return *o.LdId
}

// GetLdIdOk returns a tuple with the LdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthenticateLd) GetLdIdOk() (*string, bool) {
	if o == nil || o.LdId == nil {
		return nil, false
	}
	return o.LdId, true
}

// HasLdId returns a boolean if a field has been set.
func (o *UserAuthenticateLd) HasLdId() bool {
	if o != nil && o.LdId != nil {
		return true
	}

	return false
}

// SetLdId gets a reference to the given string and assigns it to the LdId field.
func (o *UserAuthenticateLd) SetLdId(v string) {
	o.LdId = &v
}

// GetLdType returns the LdType field value if set, zero value otherwise.
func (o *UserAuthenticateLd) GetLdType() string {
	if o == nil || o.LdType == nil {
		var ret string
		return ret
	}
	return *o.LdType
}

// GetLdTypeOk returns a tuple with the LdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserAuthenticateLd) GetLdTypeOk() (*string, bool) {
	if o == nil || o.LdType == nil {
		return nil, false
	}
	return o.LdType, true
}

// HasLdType returns a boolean if a field has been set.
func (o *UserAuthenticateLd) HasLdType() bool {
	if o != nil && o.LdType != nil {
		return true
	}

	return false
}

// SetLdType gets a reference to the given string and assigns it to the LdType field.
func (o *UserAuthenticateLd) SetLdType(v string) {
	o.LdType = &v
}

// GetEmail returns the Email field value
func (o *UserAuthenticateLd) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserAuthenticateLd) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserAuthenticateLd) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *UserAuthenticateLd) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UserAuthenticateLd) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UserAuthenticateLd) SetPassword(v string) {
	o.Password = v
}

func (o UserAuthenticateLd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LdContext != nil {
		toSerialize["ld-context"] = o.LdContext
	}
	if o.LdId != nil {
		toSerialize["ld-id"] = o.LdId
	}
	if o.LdType != nil {
		toSerialize["ld-type"] = o.LdType
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableUserAuthenticateLd struct {
	value *UserAuthenticateLd
	isSet bool
}

func (v NullableUserAuthenticateLd) Get() *UserAuthenticateLd {
	return v.value
}

func (v *NullableUserAuthenticateLd) Set(val *UserAuthenticateLd) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAuthenticateLd) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAuthenticateLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAuthenticateLd(val *UserAuthenticateLd) *NullableUserAuthenticateLd {
	return &NullableUserAuthenticateLd{value: val, isSet: true}
}

func (v NullableUserAuthenticateLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAuthenticateLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
